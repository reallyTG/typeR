package_name, function_name, parameter_position, outer_alternative, inner_alternative, type, count
"SKAT", "Dist_Case", -1, 0, 0, "double[]", 1
"SKAT", "Dist_Case", 0, 0, 0, "double[]", 1
"SKAT", "Dist_Case", 1, 0, 0, "double", 1
"SKAT", "Dist_Case_Control", -1, 0, 0, "double[]", 1
"SKAT", "Dist_Case_Control", 0, 0, 0, "double[]", 1
"SKAT", "Dist_Case_Control", 1, 0, 0, "double", 1
"SKAT", "Dist_Case_Control", 2, 0, 0, "double", 1
"SKAT", "Dist_Control", -1, 0, 0, "double[]", 1
"SKAT", "Dist_Control", 0, 0, 0, "double[]", 1
"SKAT", "Dist_Control", 1, 0, 0, "double", 1
"SKAT", "fast.logistf.control", -1, 0, 0, "struct<`maxit`:double, `maxhs`:double, `maxstep`:double, `lconv`:double, `gconv`:double, `xconv`:double>", 1
"SKAT", "fast.logistf.control", 0, 0, 0, "double", 1
"SKAT", "fast.logistf.control", 1, 0, 0, "double", 1
"SKAT", "fast.logistf.control", 2, 0, 0, "double", 1
"SKAT", "fast.logistf.control", 3, 0, 0, "double", 1
"SKAT", "fast.logistf.control", 4, 0, 0, "double", 1
"SKAT", "fast.logistf.control", 5, 0, 0, "double", 1
"SKAT", "fast.logistf.fit", -1, 0, 0, "struct<`beta`:double[], `var`:^double[], `pi`:double[], `hat.diag`:^double[], `loglik`:double, `iter`:double, `evals`:double, `conv`:double[]>", 1
"SKAT", "fast.logistf.fit", 0, 0, 0, "^double[]", 1
"SKAT", "fast.logistf.fit", 1, 0, 0, "double[]", 1
"SKAT", "fast.logistf.fit", 2, 0, 0, "null", 1
"SKAT", "fast.logistf.fit", 3, 0, 0, "null", 1
"SKAT", "fast.logistf.fit", 4, 0, 0, "logical", 1
"SKAT", "fast.logistf.fit", 5, 0, 0, "null", 1
"SKAT", "fast.logistf.fit", 5, 0, 1, "integer[]", 1
"SKAT", "fast.logistf.fit", 6, 0, 0, "null", 1
"SKAT", "fast.logistf.fit", 7, 0, 0, "null", 1
"SKAT", "filter", -1, 0, 0, "logical[]", 1
"SKAT", "filter", 0, 0, 0, "character[]", 1
"SKAT", "Get_RequiredSampleSize.SKAT_Power", -1, 0, 0, "struct<`alpha = 1.00e-02`:double, `alpha = 1.00e-03`:character, `alpha = 1.00e-06`:character>", 1
"SKAT", "Get_RequiredSampleSize.SKAT_Power", 0, 0, 0, "struct<`Power`:^double[]>", 1
"SKAT", "Get_RequiredSampleSize.SKAT_Power", 1, 0, 0, "double", 1
