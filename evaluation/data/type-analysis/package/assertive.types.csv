package_name, function_name, parameter_position, outer_alternative, inner_alternative, type, count
"assertive.types", "assert_all_are_classes", -1, 0, 0, "character[]", 1
"assertive.types", "assert_all_are_classes", 0, 0, 0, "character[]", 1
"assertive.types", "assert_all_are_classes", 1, 0, 0, "character", 1
"assertive.types", "assert_is_a_bool", -1, 0, 0, "any", 1
"assertive.types", "assert_is_a_bool", 0, 0, 0, "logical[]", 1
"assertive.types", "assert_is_a_bool", 0, 0, 1, "null", 1
"assertive.types", "assert_is_a_bool", 1, 0, 0, "character", 1
"assertive.types", "assert_is_a_complex", -1, 0, 0, "any", 1
"assertive.types", "assert_is_a_complex", 0, 0, 0, "complex[]", 1
"assertive.types", "assert_is_a_complex", 0, 0, 1, "null", 1
"assertive.types", "assert_is_a_complex", 1, 0, 0, "character", 1
"assertive.types", "assert_is_a_double", -1, 0, 0, "double", 1
"assertive.types", "assert_is_a_double", 0, 0, 0, "double", 1
"assertive.types", "assert_is_a_double", 1, 0, 0, "character", 1
"assertive.types", "assert_is_all_of", -1, 0, 0, "integer[]", 1
"assertive.types", "assert_is_all_of", 0, 0, 0, "integer[]", 1
"assertive.types", "assert_is_all_of", 1, 0, 0, "character[]", 1
"assertive.types", "assert_is_all_of", 2, 0, 0, "character", 1
"assertive.types", "assert_is_an_integer", -1, 0, 0, "any", 1
"assertive.types", "assert_is_an_integer", 0, 0, 0, "integer[]", 1
"assertive.types", "assert_is_an_integer", 1, 0, 0, "character", 1
"assertive.types", "assert_is_a_number", -1, 0, 0, "any", 1
"assertive.types", "assert_is_a_number", 0, 0, 0, "double[]", 1
"assertive.types", "assert_is_a_number", 0, 0, 1, "null", 1
"assertive.types", "assert_is_a_number", 1, 0, 0, "character", 1
"assertive.types", "assert_is_any_of", -1, 0, 0, "any", 1
"assertive.types", "assert_is_any_of", 0, 0, 0, "integer[]", 1
"assertive.types", "assert_is_any_of", 1, 0, 0, "character[]", 1
"assertive.types", "assert_is_any_of", 2, 0, 0, "character", 1
"assertive.types", "assert_is_a_raw", -1, 0, 0, "any", 1
"assertive.types", "assert_is_a_raw", 0, 0, 0, "raw[]", 1
"assertive.types", "assert_is_a_raw", 1, 0, 0, "character", 1
"assertive.types", "assert_is_array", -1, 0, 0, "class<`array`>", 1
"assertive.types", "assert_is_array", -1, 0, 1, "class<`matrix`>", 1
"assertive.types", "assert_is_array", 0, 0, 0, "class<`array`>", 1
"assertive.types", "assert_is_array", 0, 0, 1, "class<`matrix`>", 1
"assertive.types", "assert_is_array", 1, 0, 0, "character", 1
"assertive.types", "assert_is_builtin_function", -1, 0, 0, "any", 1
"assertive.types", "assert_is_builtin_function", 0, 0, 0, "character", 1
"assertive.types", "assert_is_builtin_function", 0, 0, 1, "class<`function`>", 1
"assertive.types", "assert_is_builtin_function", 1, 0, 0, "character", 1
"assertive.types", "assert_is_call", -1, 0, 0, "class<`call`>", 1
"assertive.types", "assert_is_call", 0, 0, 0, "class<`call`>", 1
"assertive.types", "assert_is_call", 1, 0, 0, "character", 1
"assertive.types", "assert_is_character", -1, 0, 0, "any", 1
"assertive.types", "assert_is_character", 0, 0, 0, "character[]", 1
"assertive.types", "assert_is_character", 0, 0, 1, "class<`factor`>", 1
"assertive.types", "assert_is_character", 1, 0, 0, "character", 1
"assertive.types", "assert_is_complex", -1, 0, 0, "any", 1
"assertive.types", "assert_is_complex", 0, 0, 0, "complex[]", 1
"assertive.types", "assert_is_complex", 1, 0, 0, "character", 1
"assertive.types", "assert_is_data.frame", -1, 0, 0, "class<`data.frame`>", 1
"assertive.types", "assert_is_data.frame", -1, 0, 1, "class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>", 1
"assertive.types", "assert_is_data.frame", 0, 0, 0, "class<`data.frame`>", 1
"assertive.types", "assert_is_data.frame", 0, 0, 1, "class<`data.frame`, `groupedData`, `nfGroupedData`, `nfnGroupedData`>", 1
"assertive.types", "assert_is_data.frame", 1, 0, 0, "character", 1
"assertive.types", "assert_is_data.table", -1, 0, 0, "any", 1
"assertive.types", "assert_is_data.table", 0, 0, 0, "class<`data.frame`, `data.table`>", 1
"assertive.types", "assert_is_data.table", 0, 0, 1, "list<double>", 1
"assertive.types", "assert_is_data.table", 1, 0, 0, "character", 1
"assertive.types", "assert_is_date", -1, 0, 0, "any", 1
"assertive.types", "assert_is_date", 0, 0, 0, "class<`POSIXct`, `POSIXt`>", 1
"assertive.types", "assert_is_date", 1, 0, 0, "character", 1
"assertive.types", "assert_is_double", -1, 0, 0, "any", 1
"assertive.types", "assert_is_double", 0, 0, 0, "integer[]", 1
"assertive.types", "assert_is_double", 1, 0, 0, "character", 1
"assertive.types", "assert_is_environment", -1, 0, 0, "environment", 1
"assertive.types", "assert_is_environment", 0, 0, 0, "environment", 1
"assertive.types", "assert_is_environment", 1, 0, 0, "character", 1
"assertive.types", "assert_is_expression", -1, 0, 0, "expression", 1
"assertive.types", "assert_is_expression", 0, 0, 0, "expression", 1
"assertive.types", "assert_is_expression", 1, 0, 0, "character", 1
"assertive.types", "assert_is_externalptr", -1, 0, 0, "any", 1
"assertive.types", "assert_is_externalptr", 0, 0, 0, "externalptr", 1
"assertive.types", "assert_is_externalptr", 0, 0, 1, "null", 1
"assertive.types", "assert_is_externalptr", 1, 0, 0, "character", 1
"assertive.types", "assert_is_factor", -1, 0, 0, "class<`factor`>", 1
"assertive.types", "assert_is_factor", 0, 0, 0, "class<`factor`>", 1
"assertive.types", "assert_is_factor", 1, 0, 0, "character", 1
"assertive.types", "assert_is_function", -1, 0, 0, "class<`function`>", 1
"assertive.types", "assert_is_function", 0, 0, 0, "class<`function`>", 1
"assertive.types", "assert_is_function", 1, 0, 0, "character", 1
"assertive.types", "assert_is_inherited_from", -1, 0, 0, "any", 1
"assertive.types", "assert_is_inherited_from", 0, 0, 0, "class<`bar`, `foo`>", 1
"assertive.types", "assert_is_inherited_from", 1, 0, 0, "character[]", 1
"assertive.types", "assert_is_inherited_from", 2, 0, 0, "any", 1
"assertive.types", "assert_is_integer", -1, 0, 0, "any", 1
"assertive.types", "assert_is_integer", 0, 0, 0, "double[]", 1
"assertive.types", "assert_is_integer", 1, 0, 0, "character", 1
"assertive.types", "assert_is_internal_function", -1, 0, 0, "any", 1
"assertive.types", "assert_is_internal_function", 0, 0, 0, "character", 1
"assertive.types", "assert_is_internal_function", 0, 0, 1, "class<`function`>", 1
"assertive.types", "assert_is_internal_function", 1, 0, 0, "character", 1
"assertive.types", "assert_is_language", -1, 0, 0, "any", 1
"assertive.types", "assert_is_language", 0, 0, 0, "class<`call`>", 1
"assertive.types", "assert_is_language", 0, 0, 1, "class<`name`>", 1
"assertive.types", "assert_is_language", 0, 0, 2, "expression", 1
"assertive.types", "assert_is_language", 0, 0, 3, "class<`function`>", 1
"assertive.types", "assert_is_language", 1, 0, 0, "character", 1
"assertive.types", "assert_is_list", -1, 0, 0, "any", 1
"assertive.types", "assert_is_list", 0, 0, 0, "integer[]", 1
"assertive.types", "assert_is_list", 0, 0, 1, "list<double>", 1
"assertive.types", "assert_is_list", 1, 0, 0, "character", 1
"assertive.types", "assert_is_logical", -1, 0, 0, "any", 1
"assertive.types", "assert_is_logical", 0, 0, 0, "double", 1
"assertive.types", "assert_is_logical", 0, 0, 1, "logical[]", 1
"assertive.types", "assert_is_logical", 1, 0, 0, "character", 1
"assertive.types", "assert_is_matrix", -1, 0, 0, "any", 1
"assertive.types", "assert_is_matrix", 0, 0, 0, "class<`matrix`>", 1
"assertive.types", "assert_is_matrix", 0, 0, 1, "class<`array`>", 1
"assertive.types", "assert_is_matrix", 1, 0, 0, "character", 1
"assertive.types", "assert_is_name", -1, 0, 0, "class<`name`>", 1
"assertive.types", "assert_is_name", 0, 0, 0, "class<`name`>", 1
"assertive.types", "assert_is_name", 1, 0, 0, "character", 1
"assertive.types", "assert_is_numeric", -1, 0, 0, "any", 1
"assertive.types", "assert_is_numeric", 0, 0, 0, "integer[]", 1
"assertive.types", "assert_is_numeric", 1, 0, 0, "character", 1
"assertive.types", "assert_is_pairlist", -1, 0, 0, "any", 1
"assertive.types", "assert_is_pairlist", 0, 0, 0, "list<any>", 1
"assertive.types", "assert_is_pairlist", 0, 0, 1, "pairlist", 1
"assertive.types", "assert_is_pairlist", 1, 0, 0, "character", 1
"assertive.types", "assert_is_qr", -1, 0, 0, "class<`qr`>", 1
"assertive.types", "assert_is_qr", 0, 0, 0, "class<`qr`>", 1
"assertive.types", "assert_is_qr", 1, 0, 0, "character", 1
"assertive.types", "assert_is_raster", -1, 0, 0, "class<`raster`>", 1
"assertive.types", "assert_is_raster", 0, 0, 0, "class<`raster`>", 1
"assertive.types", "assert_is_raster", 1, 0, 0, "character", 1
"assertive.types", "assert_is_raw", -1, 0, 0, "any", 1
"assertive.types", "assert_is_raw", 0, 0, 0, "logical[]", 1
"assertive.types", "assert_is_raw", 0, 0, 1, "raw[]", 1
"assertive.types", "assert_is_raw", 1, 0, 0, "character", 1
"assertive.types", "assert_is_relistable", -1, 0, 0, "any", 1
"assertive.types", "assert_is_relistable", 0, 0, 0, "class<`list`, `relistable`>", 1
"assertive.types", "assert_is_relistable", 0, 0, 1, "list<double>", 1
"assertive.types", "assert_is_relistable", 1, 0, 0, "character", 1
"assertive.types", "assert_is_s3_primitive_generic", -1, 0, 0, "any", 1
"assertive.types", "assert_is_s3_primitive_generic", 0, 0, 0, "class<`function`>", 1
"assertive.types", "assert_is_s3_primitive_generic", 1, 0, 0, "character", 1
"assertive.types", "assert_is_s4", -1, 0, 0, "any", 1
"assertive.types", "assert_is_s4", 0, 0, 0, "class<`classRepresentation`>", 1
"assertive.types", "assert_is_s4", 0, 0, 1, "integer[]", 1
"assertive.types", "assert_is_s4", 1, 0, 0, "character", 1
"assertive.types", "assert_is_s4_group_generic", -1, 0, 0, "any", 1
"assertive.types", "assert_is_s4_group_generic", 0, 0, 0, "class<`function`>", 1
"assertive.types", "assert_is_s4_group_generic", 1, 0, 0, "character", 1
"assertive.types", "assert_is_simple_error", -1, 0, 0, "any", 1
"assertive.types", "assert_is_simple_error", 0, 0, 0, "class<`try-error`>", 1
"assertive.types", "assert_is_simple_error", 1, 0, 0, "character", 1
"assertive.types", "assert_is_table", -1, 0, 0, "class<`table`>", 1
"assertive.types", "assert_is_table", 0, 0, 0, "class<`table`>", 1
"assertive.types", "assert_is_table", 1, 0, 0, "character", 1
"assertive.types", "assert_is_tbl", -1, 0, 0, "any", 1
"assertive.types", "assert_is_tbl", 0, 0, 0, "class<`data.frame`>", 1
"assertive.types", "assert_is_tbl", 1, 0, 0, "character", 1
"assertive.types", "assert_is_tbl_df", -1, 0, 0, "class<`data.frame`, `tbl`, `tbl_df`>", 1
"assertive.types", "assert_is_tbl_df", 0, 0, 0, "class<`data.frame`, `tbl`, `tbl_df`>", 1
"assertive.types", "assert_is_tbl_df", 1, 0, 0, "character", 1
"assertive.types", "assert_is_try_error", -1, 0, 0, "any", 1
"assertive.types", "assert_is_try_error", 0, 0, 0, "class<`condition`, `error`, `simpleError`>", 1
"assertive.types", "assert_is_try_error", 1, 0, 0, "character", 1
"assertive.types", "assert_is_ts", -1, 0, 0, "class<`ts`>", 1
"assertive.types", "assert_is_ts", 0, 0, 0, "class<`ts`>", 1
"assertive.types", "assert_is_ts", 1, 0, 0, "character", 1
"assertive.types", "%calls%", -1, 0, 0, "logical", 1
"assertive.types", "%calls%", 0, 0, 0, "class<`function`>", 1
"assertive.types", "%calls%", 1, 0, 0, "character", 1
"assertive.types", "%fn_in%", -1, 0, 0, "logical", 1
"assertive.types", "%fn_in%", 0, 0, 0, "class<`function`>", 1
"assertive.types", "%fn_in%", 1, 0, 0, "list<class<`function`>>", 1
"assertive.types", "is_builtin_function", -1, 0, 0, "logical", 1
"assertive.types", "is_builtin_function", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_builtin_function", 0, 0, 0, "class<`function`>", 1
"assertive.types", "is_builtin_function", 0, 0, 1, "character", 1
"assertive.types", "is_builtin_function", 1, 0, 0, "any", 1
"assertive.types", "is_closure_function", -1, 0, 0, "logical", 1
"assertive.types", "is_closure_function", 0, 0, 0, "class<`function`>", 1
"assertive.types", "is_closure_function", 1, 0, 0, "any", 1
"assertive.types", "is_complex", -1, 0, 0, "logical", 1
"assertive.types", "is_complex", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_complex", 0, 0, 0, "complex[]", 1
"assertive.types", "is_complex", 0, 0, 1, "null", 1
"assertive.types", "is_complex", 1, 0, 0, "any", 1
"assertive.types", "is_data.frame", -1, 0, 0, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_data.frame", -1, 0, 1, "logical", 1
"assertive.types", "is_data.frame", 0, 0, 0, "list<double>", 1
"assertive.types", "is_data.frame", 0, 0, 1, "class<`data.frame`>", 1
"assertive.types", "is_data.frame", 0, 0, 2, "class<`data.frame`, `data.table`>", 1
"assertive.types", "is_data.frame", 0, 0, 3, "class<`data.frame`, `tbl`, `tbl_df`>", 1
"assertive.types", "is_data.frame", 1, 0, 0, "any", 1
"assertive.types", "is_date", -1, 0, 0, "logical", 1
"assertive.types", "is_date", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_date", 0, 0, 0, "class<`Date`>", 1
"assertive.types", "is_date", 0, 0, 1, "class<`POSIXct`, `POSIXt`>", 1
"assertive.types", "is_date", 1, 0, 0, "any", 1
"assertive.types", "is_double", -1, 0, 0, "logical", 1
"assertive.types", "is_double", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_double", 0, 0, 0, "double", 1
"assertive.types", "is_double", 0, 0, 1, "integer[]", 1
"assertive.types", "is_double", 1, 0, 0, "any", 1
"assertive.types", "is_error", -1, 0, 0, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_error", -1, 0, 1, "logical", 1
"assertive.types", "is_error", 0, 0, 0, "class<`try-error`>", 1
"assertive.types", "is_error", 0, 0, 1, "class<`condition`, `error`, `simpleError`>", 1
"assertive.types", "is_error", 1, 0, 0, "any", 1
"assertive.types", "is_formula", -1, 0, 0, "logical", 1
"assertive.types", "is_formula", 0, 0, 0, "class<`formula`>", 1
"assertive.types", "is_formula", 1, 0, 0, "any", 1
"assertive.types", "is_function", -1, 0, 0, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_function", -1, 0, 1, "logical", 1
"assertive.types", "is_function", 0, 0, 0, "character", 1
"assertive.types", "is_function", 0, 0, 1, "class<`function`>", 1
"assertive.types", "is_function", 1, 0, 0, "any", 1
"assertive.types", "is_integer", -1, 0, 0, "logical", 1
"assertive.types", "is_integer", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_integer", 0, 0, 0, "double[]", 1
"assertive.types", "is_integer", 1, 0, 0, "any", 1
"assertive.types", "is_internal_function", -1, 0, 0, "logical", 1
"assertive.types", "is_internal_function", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_internal_function", 0, 0, 0, "class<`function`>", 1
"assertive.types", "is_internal_function", 0, 0, 1, "character", 1
"assertive.types", "is_internal_function", 1, 0, 0, "any", 1
"assertive.types", "is_logical", -1, 0, 0, "logical", 1
"assertive.types", "is_logical", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_logical", 0, 0, 0, "logical[]", 1
"assertive.types", "is_logical", 0, 0, 1, "null", 1
"assertive.types", "is_logical", 0, 0, 2, "double", 1
"assertive.types", "is_logical", 1, 0, 0, "any", 1
"assertive.types", "is_message", -1, 0, 0, "logical", 1
"assertive.types", "is_message", 0, 0, 0, "class<`condition`, `message`, `simpleMessage`>", 1
"assertive.types", "is_message", 1, 0, 0, "any", 1
"assertive.types", "is_numeric", -1, 0, 0, "logical", 1
"assertive.types", "is_numeric", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_numeric", 0, 0, 0, "double[]", 1
"assertive.types", "is_numeric", 0, 0, 1, "null", 1
"assertive.types", "is_numeric", 1, 0, 0, "any", 1
"assertive.types", "is_one_sided_formula", -1, 0, 0, "logical", 1
"assertive.types", "is_one_sided_formula", 0, 0, 0, "class<`formula`>", 1
"assertive.types", "is_one_sided_formula", 1, 0, 0, "any", 1
"assertive.types", "is_posixct", -1, 0, 0, "logical", 1
"assertive.types", "is_posixct", 0, 0, 0, "class<`POSIXct`, `POSIXt`>", 1
"assertive.types", "is_posixct", 1, 0, 0, "any", 1
"assertive.types", "is_raw", -1, 0, 0, "logical", 1
"assertive.types", "is_raw", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_raw", 0, 0, 0, "raw[]", 1
"assertive.types", "is_raw", 0, 0, 1, "logical[]", 1
"assertive.types", "is_raw", 1, 0, 0, "any", 1
"assertive.types", "is_s3_generic", -1, 0, 0, "logical", 1
"assertive.types", "is_s3_generic", 0, 0, 0, "class<`function`>", 1
"assertive.types", "is_s3_generic", 1, 0, 0, "any", 1
"assertive.types", "is_s3_group_generic", -1, 0, 0, "logical", 1
"assertive.types", "is_s3_group_generic", 0, 0, 0, "class<`function`>", 1
"assertive.types", "is_s3_group_generic", 1, 0, 0, "any", 1
"assertive.types", "is_s3_internal_generic", -1, 0, 0, "logical", 1
"assertive.types", "is_s3_internal_generic", 0, 0, 0, "class<`function`>", 1
"assertive.types", "is_s3_internal_generic", 1, 0, 0, "any", 1
"assertive.types", "is_s3_method", -1, 0, 0, "logical", 1
"assertive.types", "is_s3_method", 0, 0, 0, "class<`function`>", 1
"assertive.types", "is_s3_method", 1, 0, 0, "any", 1
"assertive.types", "is_s3_primitive_generic", -1, 0, 0, "logical", 1
"assertive.types", "is_s3_primitive_generic", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_s3_primitive_generic", 0, 0, 0, "class<`function`>", 1
"assertive.types", "is_s3_primitive_generic", 1, 0, 0, "any", 1
"assertive.types", "is_s4_group_generic", -1, 0, 0, "logical", 1
"assertive.types", "is_s4_group_generic", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_s4_group_generic", 0, 0, 0, "class<`function`>", 1
"assertive.types", "is_s4_group_generic", 1, 0, 0, "character[]", 1
"assertive.types", "is_s4_group_generic", 2, 0, 0, "any", 1
"assertive.types", "is_simple_error", -1, 0, 0, "logical", 1
"assertive.types", "is_simple_error", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_simple_error", 0, 0, 0, "class<`condition`, `error`, `simpleError`>", 1
"assertive.types", "is_simple_error", 0, 0, 1, "class<`try-error`>", 1
"assertive.types", "is_simple_error", 1, 0, 0, "any", 1
"assertive.types", "is_simple_message", -1, 0, 0, "logical", 1
"assertive.types", "is_simple_message", 0, 0, 0, "class<`condition`, `message`, `simpleMessage`>", 1
"assertive.types", "is_simple_message", 1, 0, 0, "any", 1
"assertive.types", "is_simple_warning", -1, 0, 0, "logical", 1
"assertive.types", "is_simple_warning", 0, 0, 0, "class<`condition`, `simpleWarning`, `warning`>", 1
"assertive.types", "is_simple_warning", 1, 0, 0, "any", 1
"assertive.types", "is_special_function", -1, 0, 0, "logical", 1
"assertive.types", "is_special_function", 0, 0, 0, "class<`function`>", 1
"assertive.types", "is_special_function", 1, 0, 0, "any", 1
"assertive.types", "is_tbl", -1, 0, 0, "logical", 1
"assertive.types", "is_tbl", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_tbl", 0, 0, 0, "class<`data.frame`, `tbl`, `tbl_df`>", 1
"assertive.types", "is_tbl", 0, 0, 1, "class<`data.frame`>", 1
"assertive.types", "is_tbl", 1, 0, 0, "any", 1
"assertive.types", "is_try_error", -1, 0, 0, "logical", 1
"assertive.types", "is_try_error", -1, 0, 1, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_try_error", 0, 0, 0, "class<`try-error`>", 1
"assertive.types", "is_try_error", 0, 0, 1, "class<`condition`, `error`, `simpleError`>", 1
"assertive.types", "is_try_error", 1, 0, 0, "any", 1
"assertive.types", "is_two_sided_formula", -1, 0, 0, "logical", 1
"assertive.types", "is_two_sided_formula", 0, 0, 0, "class<`formula`>", 1
"assertive.types", "is_two_sided_formula", 1, 0, 0, "any", 1
"assertive.types", "is_typeof_function", -1, 0, 0, "class<`logical`, `scalar_with_cause`>", 1
"assertive.types", "is_typeof_function", -1, 0, 1, "logical", 1
"assertive.types", "is_typeof_function", 0, 0, 0, "character", 1
"assertive.types", "is_typeof_function", 0, 0, 1, "class<`function`>", 1
"assertive.types", "is_typeof_function", 1, 0, 0, "character", 1
"assertive.types", "is_typeof_function", 2, 0, 0, "any", 1
"assertive.types", "is_warning", -1, 0, 0, "logical", 1
"assertive.types", "is_warning", 0, 0, 0, "class<`condition`, `simpleWarning`, `warning`>", 1
"assertive.types", "is_warning", 1, 0, 0, "any", 1
