package_name, function_name, parameter_position, outer_alternative, inner_alternative, type, count
"emplik", "constr", -1, 0, 0, "double", 1
"emplik", "constr", 0, 0, 0, "double", 1
"emplik", "constr", 1, 0, 0, "double", 1
"emplik", "constr", 2, 0, 0, "double[]", 1
"emplik", "constr", 3, 0, 0, "double[]", 1
"emplik", "constr", 4, 0, 0, "double[]", 1
"emplik", "constr", 5, 0, 0, "integer", 1
"emplik", "cumsumsurv", -1, 0, 0, "double[]", 1
"emplik", "cumsumsurv", 0, 0, 0, "double[]", 1
"emplik", "DnR", -1, 0, 0, "struct<`times`:double[], `n.risk`:double[], `n.event`:double[]>", 1
"emplik", "DnR", 0, 0, 0, "double[]", 1
"emplik", "DnR", 1, 0, 0, "double[]", 1
"emplik", "DnR", 2, 0, 0, "double[]", 1
"emplik", "DnR", 3, 0, 0, "double[]", 1
"emplik", "el.cen.EM", -1, 0, 0, "struct<`loglik`:double, `times`:double[], `prob`:double[], `funMLE`:double, `lam`:double, `-2LLR`:double, `Pval`:double>", 1
"emplik", "el.cen.EM", 0, 0, 0, "double[]", 1
"emplik", "el.cen.EM", 1, 0, 0, "double[]", 1
"emplik", "el.cen.EM", 2, 0, 0, "double[]", 1
"emplik", "el.cen.EM", 3, 0, 0, "any => any", 1
"emplik", "el.cen.EM", 4, 0, 0, "double", 1
"emplik", "el.cen.EM", 5, 0, 0, "double", 1
"emplik", "el.cen.EM", 6, 0, 0, "double", 1
"emplik", "el.cen.EM", 7, 0, 0, "double", 1
"emplik", "el.cen.EM", 7, 0, 1, "null", 1
"emplik", "el.cen.EM2", -1, 0, 0, "struct<`loglik`:double, `times`:double[], `prob`:double[], `lam`:double[], `iters`:double, `-2LLR`:double, `Pval`:double>", 1
"emplik", "el.cen.EM2", 0, 0, 0, "double[]", 1
"emplik", "el.cen.EM2", 1, 0, 0, "double[]", 1
"emplik", "el.cen.EM2", 2, 0, 0, "integer[]", 1
"emplik", "el.cen.EM2", 3, 0, 0, "any => any", 1
"emplik", "el.cen.EM2", 4, 0, 0, "double[]", 1
"emplik", "el.cen.EM2", 5, 0, 0, "double", 1
"emplik", "el.cen.EM2", 6, 0, 0, "double", 1
"emplik", "el.cen.EM2", 7, 0, 0, "^double[]", 1
"emplik", "el.cen.EM2", 7, 0, 1, "null", 1
"emplik", "el.cen.test", -1, 0, 0, "struct<`-2LLR`:double, `Pval`:double, `weights`:double[], `xtime`:double[], `iteration`:double, `error`:double>", 1
"emplik", "el.cen.test", 0, 0, 0, "double[]", 1
"emplik", "el.cen.test", 1, 0, 0, "double[]", 1
"emplik", "el.cen.test", 2, 0, 0, "any => any", 1
"emplik", "el.cen.test", 3, 0, 0, "double", 1
"emplik", "el.cen.test", 4, 0, 0, "double", 1
"emplik", "el.cen.test", 5, 0, 0, "double", 1
"emplik", "el.ltrc.EM", -1, 0, 0, "struct<`times`:double[], `prob`:double[], `-2LLR`:double, `Pval`:double>", 1
"emplik", "el.ltrc.EM", 0, 0, 0, "double[]", 1
"emplik", "el.ltrc.EM", 1, 0, 0, "double[]", 1
"emplik", "el.ltrc.EM", 2, 0, 0, "double[]", 1
"emplik", "el.ltrc.EM", 3, 0, 0, "any => any", 1
"emplik", "el.ltrc.EM", 4, 0, 0, "double", 1
"emplik", "el.ltrc.EM", 5, 0, 0, "double", 1
"emplik", "el.ltrc.EM", 6, 0, 0, "double", 1
"emplik", "el.test", -1, 0, 0, "struct<`-2LLR`:double, `Pval`:double, `lambda`:double[], `grad`:double[], `hess`:^double[], `wts`:double[], `nits`:double>", 1
"emplik", "el.test", 0, 0, 0, "^double[]", 1
"emplik", "el.test", 1, 0, 0, "double[]", 1
"emplik", "el.test", 2, 0, 0, "null", 1
"emplik", "el.test", 3, 0, 0, "double", 1
"emplik", "el.test", 4, 0, 0, "double", 1
"emplik", "el.test", 5, 0, 0, "double", 1
"emplik", "el.test", 6, 0, 0, "logical", 1
"emplik", "el.test.wt2", -1, 0, 0, "struct<`prob`:double[], `lambda`:double[], `grad`:double[], `hess`:null, `nits`:double>", 1
"emplik", "el.test.wt2", 0, 0, 0, "^double[]", 1
"emplik", "el.test.wt2", 1, 0, 0, "double[]", 1
"emplik", "el.test.wt2", 2, 0, 0, "double[]", 1
"emplik", "el.test.wt2", 3, 0, 0, "double", 1
"emplik", "el.test.wt2", 4, 0, 0, "double", 1
"emplik", "el.test.wt2", 5, 0, 0, "logical", 1
"emplik", "el.test.wt2", 6, 0, 0, "double", 1
"emplik", "el.test.wt2", 7, 0, 0, "logical", 1
"emplik", "emplikH.disc", -1, 0, 0, "struct<`-2LLR`:double, `lambda`:double, `times`:double[], `jumps`:double[]>", 1
"emplik", "emplikH.disc", 0, 0, 0, "double[]", 1
"emplik", "emplikH.disc", 1, 0, 0, "double[]", 1
"emplik", "emplikH.disc", 2, 0, 0, "double[]", 1
"emplik", "emplikH.disc", 3, 0, 0, "double", 1
"emplik", "emplikH.disc", 4, 0, 0, "any => any", 1
"emplik", "emplikH.disc", 5, 0, 0, "double", 1
"emplik", "emplikH.disc", 6, 0, 0, "double", 1
"emplik", "emplikH.disc2", -1, 0, 0, "struct<`-2LLR`:double, `lambda`:double, `times1`:double[], `times2`:double[], `wts1`:double[], `wts2`:double[]>", 1
"emplik", "emplikH.disc2", 0, 0, 0, "double[]", 1
"emplik", "emplikH.disc2", 1, 0, 0, "double[]", 1
"emplik", "emplikH.disc2", 2, 0, 0, "double[]", 1
"emplik", "emplikH.disc2", 3, 0, 0, "double[]", 1
"emplik", "emplikH.disc2", 4, 0, 0, "double[]", 1
"emplik", "emplikH.disc2", 5, 0, 0, "double[]", 1
"emplik", "emplikH.disc2", 6, 0, 0, "double", 1
"emplik", "emplikH.disc2", 7, 0, 0, "any => any", 1
"emplik", "emplikH.disc2", 8, 0, 0, "any => any", 1
"emplik", "emplikH.disc2", 9, 0, 0, "double", 1
"emplik", "emplikH.disc2", 10, 0, 0, "double", 1
"emplik", "emplikH.disc2", 11, 0, 0, "double", 1
"emplik", "emplikH1.test", -1, 0, 0, "struct<`-2LLR`:double, `lambda`:double, `times`:double[], `wts`:double[], `nits`:null, `message`:null>", 1
"emplik", "emplikH1.test", 0, 0, 0, "double[]", 1
"emplik", "emplikH1.test", 1, 0, 0, "double[]", 1
"emplik", "emplikH1.test", 2, 0, 0, "double", 1
"emplik", "emplikH1.test", 3, 0, 0, "double", 1
"emplik", "emplikH1.test", 4, 0, 0, "any => any", 1
"emplik", "emplikH1.test", 5, 0, 0, "double", 1
"emplik", "emplikH2.test", -1, 0, 0, "struct<`-2LLR`:double, `lambda`:double, `times`:double[], `wts`:^double[], `nits`:null, `message`:null>", 1
"emplik", "emplikH2.test", 0, 0, 0, "double[]", 1
"emplik", "emplikH2.test", 1, 0, 0, "double[]", 1
"emplik", "emplikH2.test", 2, 0, 0, "double", 1
"emplik", "emplikH2.test", 3, 0, 0, "double", 1
"emplik", "emplikH2.test", 4, 0, 0, "any => any", 1
"emplik", "emplikH2.test", 5, 0, 0, "double", 1
"emplik", "emplikH2.test", 6, 0, 0, "double[]", 1
"emplik", "emplikHs.disc2", -1, 0, 0, "struct<`-2LLR`:double, `lambda`:double[], `-2LLR(sample1)`:double, `times1`:double[], `times2`:double[]>", 1
"emplik", "emplikHs.disc2", 0, 0, 0, "double[]", 1
"emplik", "emplikHs.disc2", 1, 0, 0, "double[]", 1
"emplik", "emplikHs.disc2", 2, 0, 0, "double[]", 1
"emplik", "emplikHs.disc2", 3, 0, 0, "double[]", 1
"emplik", "emplikHs.disc2", 4, 0, 0, "double[]", 1
"emplik", "emplikHs.disc2", 5, 0, 0, "double[]", 1
"emplik", "emplikHs.disc2", 6, 0, 0, "double[]", 1
"emplik", "emplikHs.disc2", 7, 0, 0, "any => any", 1
"emplik", "emplikHs.disc2", 8, 0, 0, "any => any", 1
"emplik", "emplikHs.disc2", 9, 0, 0, "double", 1
"emplik", "emplikHs.disc2", 10, 0, 0, "double", 1
"emplik", "emplikHs.disc2", 11, 0, 0, "logical", 1
"emplik", "emplikHs.test2", -1, 0, 0, "struct<`-2LLR`:double, `lambda`:double[], `-2LLR(sample1)`:double, `Llik(sample1)`:double>", 1
"emplik", "emplikHs.test2", 0, 0, 0, "double[]", 1
"emplik", "emplikHs.test2", 1, 0, 0, "double[]", 1
"emplik", "emplikHs.test2", 2, 0, 0, "double[]", 1
"emplik", "emplikHs.test2", 3, 0, 0, "double[]", 1
"emplik", "emplikHs.test2", 4, 0, 0, "double[]", 1
"emplik", "emplikHs.test2", 5, 0, 0, "double[]", 1
"emplik", "emplikHs.test2", 6, 0, 0, "double[]", 1
"emplik", "emplikHs.test2", 7, 0, 0, "any => any", 1
"emplik", "emplikHs.test2", 8, 0, 0, "any => any", 1
"emplik", "emplikHs.test2", 9, 0, 0, "double", 1
"emplik", "emplikHs.test2", 10, 0, 0, "double", 1
"emplik", "emplikHs.test2", 11, 0, 0, "logical", 1
"emplik", "emplikHs.test22", -1, 0, 0, "struct<`-2LLR`:double, `lambda`:double, `-2LLR(sample1)`:double, `Llik(sample1)`:double>", 1
"emplik", "emplikHs.test22", 0, 0, 0, "double[]", 1
"emplik", "emplikHs.test22", 1, 0, 0, "double[]", 1
"emplik", "emplikHs.test22", 2, 0, 0, "double", 1
"emplik", "emplikHs.test22", 3, 0, 0, "integer[]", 1
"emplik", "emplikHs.test22", 4, 0, 0, "double[]", 1
"emplik", "emplikHs.test22", 5, 0, 0, "double", 1
"emplik", "emplikHs.test22", 6, 0, 0, "double", 1
"emplik", "emplikHs.test22", 7, 0, 0, "any => any", 1
"emplik", "emplikHs.test22", 8, 0, 0, "any => any", 1
"emplik", "emplikHs.test22", 9, 0, 0, "double", 1
"emplik", "emplikHs.test22", 10, 0, 0, "double", 1
"emplik", "emplikHs.test22", 11, 0, 0, "logical", 1
"emplik", "emplikHs.test22", 12, 0, 0, "^double[]", 1
"emplik", "f", -1, 0, 0, "double", 1
"emplik", "f", 0, 0, 0, "double", 1
"emplik", "f", 1, 0, 0, "^double[]", 1
"emplik", "f", 2, 0, 0, "^double[]", 1
"emplik", "f", 3, 0, 0, "double[]", 1
"emplik", "f", 4, 0, 0, "double[]", 1
"emplik", "f", 5, 0, 0, "double[]", 1
"emplik", "f", 6, 0, 0, "double[]", 1
"emplik", "f", 7, 0, 0, "double", 1
"emplik", "filter", -1, 0, 0, "logical[]", 1
"emplik", "filter", 0, 0, 0, "character[]", 1
"emplik", "fun", -1, 0, 0, "^double[]", 1
"emplik", "fun", 0, 0, 0, "double[]", 1
"emplik", "fun", 0, 0, 1, "symbol", 1
"emplik", "fun", 1, 0, 0, "^double[]", 1
"emplik", "FUN", -1, 0, 0, "double[]", 1
"emplik", "FUN", 0, 0, 0, "double[]", 1
"emplik", "FUN", 1, 0, 0, "double[]", 1
"emplik", "fun2", -1, 0, 0, "^double[]", 1
"emplik", "fun2", 0, 0, 0, "integer[]", 1
"emplik", "gradf", -1, 0, 0, "double[]", 1
"emplik", "gradf", 0, 0, 0, "^double[]", 1
"emplik", "gradf", 1, 0, 0, "double[]", 1
"emplik", "gradf", 2, 0, 0, "double[]", 1
"emplik", "inthaz", -1, 0, 0, "double", 1
"emplik", "inthaz", 0, 0, 0, "double", 1
"emplik", "inthaz", 1, 0, 0, "^double[]", 1
"emplik", "inthaz", 2, 0, 0, "^double[]", 1
"emplik", "inthaz", 3, 0, 0, "double[]", 1
"emplik", "inthaz", 4, 0, 0, "double[]", 1
"emplik", "inthaz", 5, 0, 0, "double[]", 1
"emplik", "inthaz", 6, 0, 0, "double[]", 1
"emplik", "inthaz", 7, 0, 0, "double", 1
"emplik", "llog", -1, 0, 0, "^double[]", 1
"emplik", "llog", 0, 0, 0, "^double[]", 1
"emplik", "llog", 1, 0, 0, "double", 1
"emplik", "llogp", -1, 0, 0, "^double[]", 1
"emplik", "llogp", 0, 0, 0, "^double[]", 1
"emplik", "llogp", 1, 0, 0, "double", 1
"emplik", "llogpp", -1, 0, 0, "^double[]", 1
"emplik", "llogpp", 0, 0, 0, "^double[]", 1
"emplik", "llogpp", 1, 0, 0, "double", 1
"emplik", "LTRC", -1, 0, 0, "struct<`times`:double[], `survjump`:double[], `surv`:double[], `CumHaz`:double[]>", 1
"emplik", "LTRC", 0, 0, 0, "double[]", 1
"emplik", "LTRC", 1, 0, 0, "double[]", 1
"emplik", "LTRC", 2, 0, 0, "double[]", 1
"emplik", "LTRC", 3, 0, 0, "double[]", 1
"emplik", "RankRegTest", -1, 0, 0, "struct<`prob`:double[], `logel`:double, `logel2`:double, `-2LLR`:double>", 1
"emplik", "RankRegTest", 0, 0, 0, "double[]", 1
"emplik", "RankRegTest", 1, 0, 0, "double[]", 1
"emplik", "RankRegTest", 2, 0, 0, "double[]", 1
"emplik", "RankRegTest", 3, 0, 0, "double", 1
"emplik", "RankRegTest", 4, 0, 0, "character", 1
"emplik", "RankRegTestH", -1, 0, 0, "struct<`loglikH0`:double, `-2LLR`:double>", 1
"emplik", "RankRegTestH", 0, 0, 0, "double[]", 1
"emplik", "RankRegTestH", 1, 0, 0, "double[]", 1
"emplik", "RankRegTestH", 2, 0, 0, "double[]", 1
"emplik", "RankRegTestH", 3, 0, 0, "double", 1
"emplik", "RankRegTestH", 4, 0, 0, "character", 1
"emplik", "redistF", -1, 0, 0, "struct<`y`:double[], `d`:double[], `weight`:^double[], `ordY`:integer[]>", 1
"emplik", "redistF", 0, 0, 0, "double[]", 1
"emplik", "redistF", 1, 0, 0, "double[]", 1
"emplik", "redistF", 2, 0, 0, "double[]", 1
"emplik", "ROCnp", -1, 0, 0, "struct<`-2LLR`:double, `cstar`:double>", 1
"emplik", "ROCnp", 0, 0, 0, "double[]", 1
"emplik", "ROCnp", 1, 0, 0, "double[]", 1
"emplik", "ROCnp", 2, 0, 0, "double[]", 1
"emplik", "ROCnp", 3, 0, 0, "double[]", 1
"emplik", "ROCnp", 4, 0, 0, "double", 1
"emplik", "ROCnp", 5, 0, 0, "double", 1
"emplik", "solve3.QP", -1, 0, 0, "struct<`solution`:^double[]>", 1
"emplik", "solve3.QP", 0, 0, 0, "^double[]", 1
"emplik", "solve3.QP", 1, 0, 0, "^double[]", 1
"emplik", "solve3.QP", 2, 0, 0, "^double[]", 1
"emplik", "solve3.QP", 3, 0, 0, "double[]", 1
"emplik", "solve3.QP", 4, 0, 0, "double", 1
"emplik", "solve3.QP", 5, 0, 0, "logical", 1
"emplik", "Wdataclean2", -1, 0, 0, "struct<`value`:double[], `dd`:double[], `weight`:double[]>", 1
"emplik", "Wdataclean2", 0, 0, 0, "double[]", 1
"emplik", "Wdataclean2", 1, 0, 0, "double[]", 1
"emplik", "Wdataclean2", 2, 0, 0, "double[]", 1
"emplik", "Wdataclean3", -1, 0, 0, "struct<`value`:double[], `dd`:double[], `weight`:double[]>", 1
"emplik", "Wdataclean3", 0, 0, 0, "double[]", 1
"emplik", "Wdataclean3", 1, 0, 0, "double[]", 1
"emplik", "Wdataclean3", 2, 0, 0, "double[]", 1
"emplik", "Wdataclean3", 3, 0, 0, "double[]", 1
"emplik", "Wdataclean5", -1, 0, 0, "struct<`value`:double[], `dd`:double[], `weight`:double[], `xxmat`:^double[]>", 1
"emplik", "Wdataclean5", 0, 0, 0, "double[]", 1
"emplik", "Wdataclean5", 1, 0, 0, "double[]", 1
"emplik", "Wdataclean5", 2, 0, 0, "integer[]", 1
"emplik", "Wdataclean5", 3, 0, 0, "double[]", 1
"emplik", "Wdataclean5", 4, 0, 0, "^double[]", 1
"emplik", "WKM", -1, 0, 0, "struct<`times`:double[], `jump`:double[], `surv`:double[], `logel`:double>", 1
"emplik", "WKM", 0, 0, 0, "double[]", 1
"emplik", "WKM", 1, 0, 0, "double[]", 1
"emplik", "WKM", 2, 0, 0, "double[]", 1
"emplik", "WKM", 3, 0, 0, "double[]", 1
