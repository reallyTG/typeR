package_name, function_name, parameter_position, outer_alternative, inner_alternative, type, count
"moveHMM", "filter", -1, 0, 0, "logical[]", 1
"moveHMM", "filter", 0, 0, 0, "character[]", 1
"moveHMM", "is.formula", -1, 0, 0, "logical", 1
"moveHMM", "is.formula", 0, 0, 0, "language", 1
"moveHMM", "is.moveData", -1, 0, 0, "logical", 1
"moveHMM", "is.moveData", 0, 0, 0, "struct<`ID`:integer[], `step`:^double[], `angle`:^double[], `x`:double[], `y`:double[], `cov1`:double[], `cov2`:double[]>", 1
"moveHMM", "is.moveHMM", -1, 0, 0, "logical", 1
"moveHMM", "is.moveHMM", 0, 0, 0, "struct<`data`:struct<`ID`:integer[], `step`:^double[], `angle`:^double[], `x`:double[], `y`:double[], `(Intercept)`:double[], `cov1`:double[], `cos(cov2)`:double[]>, `mle`:struct<`stepPar`:^double[], `anglePar`:^double[], `beta`:^double[], `delta`:double[]>, `mod`:struct<`minimum`:double, `estimate`:double[], `gradient`:double[], `hessian`:^double[], `code`:integer, `iterations`:integer>, `conditions`:struct<`stepDist`:character, `angleDist`:character, `zeroInflation`:logical, `estAngleMean`:logical, `stationary`:logical, `formula`:language>, `rawCovs`:struct<`cov1`:double[], `cov2`:double[]>>", 1
"moveHMM", "nLogLike_rcpp", -1, 0, 0, "double", 1
"moveHMM", "nLogLike_rcpp", 0, 0, 0, "double", 1
"moveHMM", "nLogLike_rcpp", 1, 0, 0, "^double[]", 1
"moveHMM", "nLogLike_rcpp", 2, 0, 0, "^double[]", 1
"moveHMM", "nLogLike_rcpp", 3, 0, 0, "struct<`ID`:integer[], `step`:^double[], `angle`:^double[], `x`:double[], `y`:double[], `(Intercept)`:double[], `cov1`:double[], `cos(cov2)`:double[]>", 1
"moveHMM", "nLogLike_rcpp", 4, 0, 0, "character", 1
"moveHMM", "nLogLike_rcpp", 5, 0, 0, "character", 1
"moveHMM", "nLogLike_rcpp", 6, 0, 0, "^double[]", 1
"moveHMM", "nLogLike_rcpp", 7, 0, 0, "^double[]", 1
"moveHMM", "nLogLike_rcpp", 8, 0, 0, "double[]", 1
"moveHMM", "nLogLike_rcpp", 9, 0, 0, "integer[]", 1
"moveHMM", "nLogLike_rcpp", 10, 0, 0, "logical", 1
"moveHMM", "nLogLike_rcpp", 11, 0, 0, "logical", 1
"moveHMM", "nLogLike_rcpp", 12, 0, 0, "double", 1
"moveHMM", "plot.moveData", -1, 0, 0, "struct<`mar`:double[]>", 1
"moveHMM", "plot.moveData", 0, 0, 0, "struct<`ID`:integer[], `step`:^double[], `angle`:^double[], `x`:double[], `y`:double[], `cov1`:double[], `cov2`:double[]>", 1
"moveHMM", "plot.moveData", 1, 0, 0, "null", 1
"moveHMM", "plot.moveData", 2, 0, 0, "logical", 1
"moveHMM", "plot.moveData", 3, 0, 0, "logical", 1
"moveHMM", "plot.moveData", 4, 0, 0, "double", 1
"moveHMM", "plot.moveData", 5, 0, 0, "null", 1
"moveHMM", "plot.moveHMM", -1, 0, 0, "struct<`ask`:logical>", 1
"moveHMM", "plot.moveHMM", 0, 0, 0, "struct<`data`:struct<`ID`:integer[], `step`:^double[], `angle`:^double[], `x`:double[], `y`:double[], `(Intercept)`:double[], `cov1`:double[], `cos(cov2)`:double[]>, `mle`:struct<`stepPar`:^double[], `anglePar`:^double[], `beta`:^double[], `delta`:double[]>, `mod`:struct<`minimum`:double, `estimate`:double[], `gradient`:double[], `hessian`:^double[], `code`:integer, `iterations`:integer>, `conditions`:struct<`stepDist`:character, `angleDist`:character, `zeroInflation`:logical, `estAngleMean`:logical, `stationary`:logical, `formula`:language>, `rawCovs`:struct<`cov1`:double[], `cov2`:double[]>>", 1
"moveHMM", "plot.moveHMM", 1, 0, 0, "double", 1
"moveHMM", "plot.moveHMM", 2, 0, 0, "logical", 1
"moveHMM", "plot.moveHMM", 3, 0, 0, "double", 1
"moveHMM", "plot.moveHMM", 4, 0, 0, "null", 1
"moveHMM", "plot.moveHMM", 5, 0, 0, "logical", 1
"moveHMM", "plot.moveHMM", 6, 0, 0, "logical", 1
"moveHMM", "plot.moveHMM", 7, 0, 0, "null", 1
"moveHMM", "plot.moveHMM", 8, 0, 0, "logical", 1
"moveHMM", "plot.moveHMM", 9, 0, 0, "logical", 1
"moveHMM", "plot.moveHMM", 10, 0, 0, "logical", 1
"moveHMM", "plot.moveHMM", 11, 0, 0, "double", 1
"moveHMM", "plot.moveHMM", 12, 0, 0, "null", 1
"moveHMM", "plotHist", -1, 0, 0, "struct<`rect`:struct<`w`:double, `h`:double, `left`:double, `top`:double>, `text`:struct<`x`:double[], `y`:double[]>>", 1
"moveHMM", "plotHist", 0, 0, 0, "^double[]", 1
"moveHMM", "plotHist", 1, 0, 0, "^double[]", 1
"moveHMM", "plotHist", 2, 0, 0, "tuple<^double[], ^double[]>", 1
"moveHMM", "plotHist", 3, 0, 0, "tuple<^double[], ^double[]>", 1
"moveHMM", "plotHist", 4, 0, 0, "character", 1
"moveHMM", "plotHist", 5, 0, 0, "logical", 1
"moveHMM", "plotHist", 6, 0, 0, "double", 1
"moveHMM", "plotHist", 7, 0, 0, "null", 1
"moveHMM", "plotHist", 8, 0, 0, "null", 1
"moveHMM", "plotHist", 9, 0, 0, "character[]", 1
"moveHMM", "plotHist", 10, 0, 0, "logical", 1
"moveHMM", "print.moveHMM", -1, 0, 0, "double[]", 1
"moveHMM", "print.moveHMM", 0, 0, 0, "struct<`data`:struct<`ID`:integer[], `step`:^double[], `angle`:^double[], `x`:double[], `y`:double[], `(Intercept)`:double[], `cov1`:double[], `cos(cov2)`:double[]>, `mle`:struct<`stepPar`:^double[], `anglePar`:^double[], `beta`:^double[], `delta`:double[]>, `mod`:struct<`minimum`:double, `estimate`:double[], `gradient`:double[], `hessian`:^double[], `code`:integer, `iterations`:integer>, `conditions`:struct<`stepDist`:character, `angleDist`:character, `zeroInflation`:logical, `estAngleMean`:logical, `stationary`:logical, `formula`:language>, `rawCovs`:struct<`cov1`:double[], `cov2`:double[]>, `knownStates`:null>", 1
"moveHMM", "print.moveHMM", 1, 0, 0, "null", 1
"moveHMM", "trMatrix_rcpp", -1, 0, 0, "double[]", 1
"moveHMM", "trMatrix_rcpp", 0, 0, 0, "integer", 1
"moveHMM", "trMatrix_rcpp", 1, 0, 0, "^double[]", 1
"moveHMM", "trMatrix_rcpp", 2, 0, 0, "^double[]", 1
