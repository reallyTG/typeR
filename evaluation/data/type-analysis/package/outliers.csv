package_name, function_name, parameter_position, outer_alternative, inner_alternative, type, count
"outliers", "chisq.out.test", -1, 0, 0, "class<`htest`>", 1
"outliers", "chisq.out.test", 0, 0, 0, "double[]", 1
"outliers", "chisq.out.test", 1, 0, 0, "double", 1
"outliers", "chisq.out.test", 2, 0, 0, "logical", 1
"outliers", "cochran.test", -1, 0, 0, "class<`htest`>", 1
"outliers", "cochran.test", 0, 0, 0, "class<`formula`>", 1
"outliers", "cochran.test", 0, 0, 1, "double[]", 1
"outliers", "cochran.test", 1, 0, 0, "class<`data.frame`>", 1
"outliers", "cochran.test", 1, 0, 1, "double[]", 1
"outliers", "cochran.test", 2, 0, 0, "logical", 1
"outliers", "dixon.test", -1, 0, 0, "class<`htest`>", 1
"outliers", "dixon.test", 0, 0, 0, "double[]", 1
"outliers", "dixon.test", 1, 0, 0, "double", 1
"outliers", "dixon.test", 2, 0, 0, "logical", 1
"outliers", "dixon.test", 3, 0, 0, "logical", 1
"outliers", "FUN", -1, 0, 0, "double[]", 1
"outliers", "FUN", -1, 0, 1, "class<`matrix`>", 1
"outliers", "FUN", 0, 0, 0, "double[]", 1
"outliers", "FUN", 0, 0, 1, "class<`matrix`>", 1
"outliers", "FUN", 1, 0, 0, "logical", 1
"outliers", "FUN", 2, 0, 0, "any", 1
"outliers", "FUN", 3, 0, 0, "logical", 1
"outliers", "FUN", -1, 1, 0, "class<`matrix`>", 1
"outliers", "FUN", -1, 1, 1, "double[]", 1
"outliers", "FUN", 0, 1, 0, "double[]", 1
"outliers", "FUN", 0, 1, 1, "class<`matrix`>", 1
"outliers", "FUN", 1, 1, 0, "logical", 1
"outliers", "FUN", 2, 1, 0, "logical", 1
"outliers", "grubbs.test", -1, 0, 0, "class<`htest`>", 1
"outliers", "grubbs.test", 0, 0, 0, "double[]", 1
"outliers", "grubbs.test", 1, 0, 0, "double", 1
"outliers", "grubbs.test", 2, 0, 0, "logical", 1
"outliers", "grubbs.test", 3, 0, 0, "logical", 1
"outliers", "outlier", -1, 0, 0, "class<`matrix`>", 1
"outliers", "outlier", -1, 0, 1, "double[]", 1
"outliers", "outlier", 0, 0, 0, "double[]", 1
"outliers", "outlier", 0, 0, 1, "class<`matrix`>", 1
"outliers", "outlier", 1, 0, 0, "logical", 1
"outliers", "outlier", 2, 0, 0, "logical", 1
"outliers", "pcochran", -1, 0, 0, "double", 1
"outliers", "pcochran", 0, 0, 0, "double", 1
"outliers", "pcochran", 1, 0, 0, "double", 1
"outliers", "pcochran", 2, 0, 0, "double", 1
"outliers", "pdixon", -1, 0, 0, "double", 1
"outliers", "pdixon", 0, 0, 0, "double", 1
"outliers", "pdixon", 1, 0, 0, "integer", 1
"outliers", "pdixon", 2, 0, 0, "double", 1
"outliers", "pgrubbs", -1, 0, 0, "double", 1
"outliers", "pgrubbs", 0, 0, 0, "double", 1
"outliers", "pgrubbs", 1, 0, 0, "integer", 1
"outliers", "pgrubbs", 2, 0, 0, "double", 1
"outliers", "qcochran", -1, 0, 0, "double", 1
"outliers", "qcochran", 0, 0, 0, "double", 1
"outliers", "qcochran", 1, 0, 0, "double", 1
"outliers", "qcochran", 2, 0, 0, "double", 1
"outliers", "qdixon", -1, 0, 0, "double", 1
"outliers", "qdixon", 0, 0, 0, "double", 1
"outliers", "qdixon", 1, 0, 0, "integer", 1
"outliers", "qdixon", 2, 0, 0, "double", 1
"outliers", "qdixon", 3, 0, 0, "logical", 1
"outliers", "qgrubbs", -1, 0, 0, "double", 1
"outliers", "qgrubbs", 0, 0, 0, "double", 1
"outliers", "qgrubbs", 1, 0, 0, "integer", 1
"outliers", "qgrubbs", 2, 0, 0, "double", 1
"outliers", "qgrubbs", 3, 0, 0, "logical", 1
"outliers", "qtable", -1, 0, 0, "double", 1
"outliers", "qtable", 0, 0, 0, "double", 1
"outliers", "qtable", 1, 0, 0, "double[]", 1
"outliers", "qtable", 2, 0, 0, "double[]", 1
"outliers", "rm.outlier", -1, 0, 0, "double[]", 1
"outliers", "rm.outlier", -1, 0, 1, "class<`matrix`>", 1
"outliers", "rm.outlier", 0, 0, 0, "double[]", 1
"outliers", "rm.outlier", 0, 0, 1, "class<`matrix`>", 1
"outliers", "rm.outlier", 1, 0, 0, "logical", 1
"outliers", "rm.outlier", 2, 0, 0, "any", 1
"outliers", "rm.outlier", 3, 0, 0, "logical", 1
"outliers", "scores", -1, 0, 0, "double[]", 1
"outliers", "scores", 0, 0, 0, "double[]", 1
"outliers", "scores", 1, 0, 0, "character[]", 1
"outliers", "scores", 2, 0, 0, "double", 1
"outliers", "scores", 2, 0, 1, "null", 1
"outliers", "scores", 3, 0, 0, "null", 1
