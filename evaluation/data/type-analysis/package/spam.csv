package_name, function_name, parameter_position, outer_alternative, inner_alternative, type, count
"spam", "adjacency.landkreis", -1, 0, 0, "class<`spam`>", 1
"spam", "adjacency.landkreis", 0, 0, 0, "character", 1
"spam", "all.equal", -1, 0, 0, "logical", 1
"spam", "all.equal", 0, 0, 0, "class<`matrix`>", 1
"spam", "all.equal", 1, 0, 0, "class<`spam`>", 1
"spam", "all.equal", 2, 0, 0, "...", 1
"spam", "all.equal", -1, 1, 0, "(character[] | logical)", 1
"spam", "all.equal", 0, 1, 0, "class<`spam`>", 1
"spam", "all.equal", 1, 1, 0, "class<`spam`>", 1
"spam", "all.equal", 2, 1, 0, "...", 1
"spam", "all.equal", -1, 2, 0, "logical", 1
"spam", "all.equal", 0, 2, 0, "class<`spam`>", 1
"spam", "all.equal", 1, 2, 0, "class<`matrix`>", 1
"spam", "all.equal", 2, 2, 0, "...", 1
"spam", "all.equal.spam", -1, 0, 0, "(character[] | logical)", 1
"spam", "all.equal.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "all.equal.spam", 1, 0, 0, "class<`spam`>", 1
"spam", "all.equal.spam", 2, 0, 0, "any", 1
"spam", "all.equal.spam", 3, 0, 0, "null", 1
"spam", "all.equal.spam", 4, 0, 0, "logical", 1
"spam", "all.equal.spam", 5, 0, 0, "...", 1
"spam", "apply.spam", -1, 0, 0, "(class<`matrix`> | class<`spam`> | double[] | list<class<`table`> | double[]>)", 1
"spam", "apply.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "apply.spam", 1, 0, 0, "double[]", 1
"spam", "apply.spam", 1, 0, 1, "null", 1
"spam", "apply.spam", 2, 0, 0, "class<`function`>", 1
"spam", "apply.spam", 3, 0, 0, "...", 1
"spam", "as.matrix", -1, 0, 0, "class<`matrix`>", 1
"spam", "as.matrix", 0, 0, 0, "class<`spam`>", 1
"spam", "as.matrix", 1, 0, 0, "...", 1
"spam", "as.matrix.spam", -1, 0, 0, "class<`matrix`>", 1
"spam", "as.matrix.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "as.matrix.spam", 1, 0, 0, "...", 1
"spam", "assign.spam", -1, 0, 0, "class<`spam`>", 1
"spam", "assign.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "assign.spam", 1, 0, 0, "class<`matrix`>", 1
"spam", "assign.spam", 1, 0, 1, "double", 1
"spam", "assign.spam", 1, 0, 2, "integer[]", 1
"spam", "assign.spam", 2, 0, 0, "null", 1
"spam", "assign.spam", 2, 0, 1, "double", 1
"spam", "assign.spam", 2, 0, 2, "integer[]", 1
"spam", "assign.spam", 3, 0, 0, "double[]", 1
"spam", "assign.spam", 3, 0, 1, "class<`matrix`>", 1
"spam", "as.spam", -1, 0, 0, "class<`spam`>", 1
"spam", "as.spam", 0, 0, 0, "class<`matrix`>", 1
"spam", "as.spam", 1, 0, 0, "double", 1
"spam", "as.spam", -1, 1, 0, "class<`spam`>", 1
"spam", "as.spam", 0, 1, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "as.spam", 1, 1, 0, "double", 1
"spam", "as.spam", -1, 2, 0, "class<`spam`>", 1
"spam", "as.spam", 0, 2, 0, "class<`matrix`>", 1
"spam", "as.spam", 1, 2, 0, "double", 1
"spam", "as.spam", -1, 3, 0, "class<`spam`>", 1
"spam", "as.spam", 0, 3, 0, "class<`dist`>", 1
"spam", "as.spam", 0, 3, 1, "class<`matrix`>", 1
"spam", "as.spam", 0, 3, 2, "class<`spam`>", 1
"spam", "as.spam", 0, 3, 3, "class<`spam.chol.NgPeyton`>", 1
"spam", "as.spam", 0, 3, 4, "^double[]", 1
"spam", "as.spam", 1, 3, 0, "double", 1
"spam", "as.spam", -1, 4, 0, "class<`spam`>", 1
"spam", "as.spam", 0, 4, 0, "^double[]", 1
"spam", "as.spam", 1, 4, 0, "double", 1
"spam", "as.spam", -1, 5, 0, "class<`spam`>", 1
"spam", "as.spam", 0, 5, 0, "integer[]", 1
"spam", "as.spam", 1, 5, 0, "double", 1
"spam", "as.spam", -1, 6, 0, "class<`spam`>", 1
"spam", "as.spam", 0, 6, 0, "class<`dist`>", 1
"spam", "as.spam", 1, 6, 0, "double", 1
"spam", "as.spam", -1, 7, 0, "class<`spam`>", 1
"spam", "as.spam", 0, 7, 0, "class<`spam`>", 1
"spam", "as.spam", 1, 7, 0, "double", 1
"spam", "as.spam.matrix", -1, 0, 0, "class<`spam`>", 1
"spam", "as.spam.matrix", 0, 0, 0, "class<`matrix`>", 1
"spam", "as.spam.matrix", 1, 0, 0, "double", 1
"spam", "as.spam.spam", -1, 0, 0, "class<`spam`>", 1
"spam", "as.spam.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "as.spam.spam", 1, 0, 0, "double", 1
"spam", "backsolve", -1, 0, 0, "(class<`matrix`> | double[])", 1
"spam", "backsolve", 0, 0, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "backsolve", 1, 0, 0, "class<`matrix`>", 1
"spam", "backsolve", 1, 0, 1, "double[]", 1
"spam", "backsolve", 2, 0, 0, "...", 1
"spam", "backsolve", -1, 1, 0, "class<`matrix`>", 1
"spam", "backsolve", 0, 1, 0, "class<`matrix`>", 1
"spam", "backsolve", 1, 1, 0, "class<`matrix`>", 1
"spam", "backsolve", 2, 1, 0, "...", 1
"spam", "backsolve", -1, 2, 0, "(class<`matrix`> | double[])", 1
"spam", "backsolve", 0, 2, 0, "class<`matrix`>", 1
"spam", "backsolve", 0, 2, 1, "class<`spam.chol.NgPeyton`>", 1
"spam", "backsolve", 1, 2, 0, "class<`matrix`>", 1
"spam", "backsolve", 1, 2, 1, "double[]", 1
"spam", "backsolve", 2, 2, 0, "...", 1
"spam", "bandwidth", -1, 0, 0, "integer[]", 1
"spam", "bandwidth", 0, 0, 0, "class<`spam`>", 1
"spam", "bdiag.spam", -1, 0, 0, "class<`spam`>", 1
"spam", "bdiag.spam", 0, 0, 0, "...", 1
"spam", "cbind", -1, 0, 0, "class<`spam`>", 1
"spam", "cbind", 0, 0, 0, "...", 1
"spam", "cbind", 1, 0, 0, "double", 1
"spam", "cbind.spam", -1, 0, 0, "class<`spam`>", 1
"spam", "cbind.spam", 0, 0, 0, "...", 1
"spam", "cbind.spam", 1, 0, 0, "double", 1
"spam", "checkpivot", -1, 0, 0, "null", 1
"spam", "checkpivot", 0, 0, 0, "double[]", 1
"spam", "checkpivot", 1, 0, 0, "integer", 1
"spam", "checkpivot", 2, 0, 0, "character", 1
"spam", "chol", -1, 0, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "chol", 0, 0, 0, "class<`spam`>", 1
"spam", "chol", 1, 0, 0, "...", 1
"spam", "chol", -1, 1, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "chol", 0, 1, 0, "class<`spam`>", 1
"spam", "chol", 1, 1, 0, "...", 1
"spam", "chol.spam", -1, 0, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "chol.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "chol.spam", 1, 0, 0, "character", 1
"spam", "chol.spam", 1, 0, 1, "integer[]", 1
"spam", "chol.spam", 2, 0, 0, "character", 1
"spam", "chol.spam", 3, 0, 0, "list<any>", 1
"spam", "chol.spam", 4, 0, 0, "double", 1
"spam", "chol.spam", 5, 0, 0, "null", 1
"spam", "chol.spam", 6, 0, 0, "...", 1
"spam", "circulant.spam", -1, 0, 0, "class<`spam`>", 1
"spam", "circulant.spam", 0, 0, 0, "double[]", 1
"spam", "circulant.spam", 1, 0, 0, "null", 1
"spam", "circulant.spam", 2, 0, 0, "double", 1
"spam", "cleanup", -1, 0, 0, "class<`spam`>", 1
"spam", "cleanup", 0, 0, 0, "class<`spam`>", 1
"spam", "cleanup", 1, 0, 0, "double", 1
"spam", "colSums", -1, 0, 0, "double[]", 1
"spam", "colSums", 0, 0, 0, "class<`spam`>", 1
"spam", "colSums", 1, 0, 0, "logical", 1
"spam", "colSums", 2, 0, 0, "double", 1
"spam", "colSums", 3, 0, 0, "...", 1
"spam", "cov.sph", -1, 0, 0, "class<`spam`>", 1
"spam", "cov.sph", 0, 0, 0, "class<`spam`>", 1
"spam", "cov.sph", 1, 0, 0, "double[]", 1
"spam", "cov.sph", 2, 0, 0, "...", 1
"spam", "cov.sph", 3, 0, 0, "double", 1
"spam", "crossprod.spam", -1, 0, 0, "class<`matrix`>", 1
"spam", "crossprod.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "crossprod.spam", 1, 0, 0, "integer[]", 1
"spam", "%d+%", -1, 0, 0, "class<`spam`>", 1
"spam", "%d+%", 0, 0, 0, "integer[]", 1
"spam", "%d+%", 1, 0, 0, "class<`spam`>", 1
"spam", "%d+%", 2, 0, 0, "...", 1
"spam", "%d+%", -1, 1, 0, "class<`matrix`>", 1
"spam", "%d+%", 0, 1, 0, "integer[]", 1
"spam", "%d+%", 1, 1, 0, "class<`matrix`>", 1
"spam", "%d+%", 2, 1, 0, "...", 1
"spam", "%d+%", -1, 2, 0, "(class<`matrix`> | class<`spam`>)", 1
"spam", "%d+%", 0, 2, 0, "integer[]", 1
"spam", "%d+%", 1, 2, 0, "class<`matrix`>", 1
"spam", "%d+%", 1, 2, 1, "class<`spam`>", 1
"spam", "%d+%", 2, 2, 0, "...", 1
"spam", "det", -1, 0, 0, "double", 1
"spam", "det", 0, 0, 0, "class<`spam`>", 1
"spam", "det", 0, 0, 1, "class<`spam.chol.NgPeyton`>", 1
"spam", "det", 1, 0, 0, "...", 1
"spam", "determinant", -1, 0, 0, "class<`det`>", 1
"spam", "determinant", 0, 0, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "determinant", 1, 0, 0, "logical", 1
"spam", "determinant", 2, 0, 0, "...", 1
"spam", "determinant", -1, 1, 0, "class<`det`>", 1
"spam", "determinant", 0, 1, 0, "class<`spam`>", 1
"spam", "determinant", 1, 1, 0, "logical", 1
"spam", "determinant", 2, 1, 0, "...", 1
"spam", "determinant.spam.chol.NgPeyton", -1, 0, 0, "class<`det`>", 1
"spam", "determinant.spam.chol.NgPeyton", 0, 0, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "determinant.spam.chol.NgPeyton", 1, 0, 0, "logical", 1
"spam", "determinant.spam.chol.NgPeyton", 2, 0, 0, "...", 1
"spam", "diag", -1, 0, 0, "double[]", 1
"spam", "diag", 0, 0, 0, "class<`spam`>", 1
"spam", "diag", 1, 0, 0, "any", 1
"spam", "diag", 2, 0, 0, "any", 1
"spam", "diag", 3, 0, 0, "logical", 1
"spam", "diag<-", -1, 0, 0, "class<`spam`>", 1
"spam", "diag<-", 0, 0, 0, "class<`spam`>", 1
"spam", "diag<-", 1, 0, 0, "double[]", 1
"spam", "diag.of.spam", -1, 0, 0, "double[]", 1
"spam", "diag.of.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "diag.of.spam", 1, 0, 0, "any", 1
"spam", "diag.of.spam", 2, 0, 0, "any", 1
"spam", "diag.spam", -1, 0, 0, "(class<`spam`> | double[])", 1
"spam", "diag.spam", 0, 0, 0, "double[]", 1
"spam", "diag.spam", 0, 0, 1, "class<`spam`>", 1
"spam", "diag.spam", 1, 0, 0, "any", 1
"spam", "diag.spam", 2, 0, 0, "any", 1
"spam", "diag.spam<-", -1, 0, 0, "class<`spam`>", 1
"spam", "diag.spam<-", 0, 0, 0, "class<`spam`>", 1
"spam", "diag.spam<-", 1, 0, 0, "double[]", 1
"spam", "diff.spam", -1, 0, 0, "class<`spam`>", 1
"spam", "diff.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "diff.spam", 1, 0, 0, "double", 1
"spam", "diff.spam", 2, 0, 0, "double", 1
"spam", "diff.spam", 3, 0, 0, "...", 1
"spam", "display", -1, 0, 0, "null", 1
"spam", "display", 0, 0, 0, "class<`spam`>", 1
"spam", "display", 1, 0, 0, "...", 1
"spam", "display", -1, 1, 0, "null", 1
"spam", "display", 0, 1, 0, "class<`spam`>", 1
"spam", "display", 1, 1, 0, "...", 1
"spam", "display.spam", -1, 0, 0, "null", 1
"spam", "display.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "display.spam", 1, 0, 0, "character[]", 1
"spam", "display.spam", 2, 0, 0, "character", 1
"spam", "display.spam", 3, 0, 0, "character", 1
"spam", "display.spam", 4, 0, 0, "double", 1
"spam", "display.spam", 5, 0, 0, "character", 1
"spam", "display.spam", 6, 0, 0, "...", 1
"spam", "eigen_approx", -1, 0, 0, "list<null | double[]>", 1
"spam", "eigen_approx", 0, 0, 0, "class<`spam`>", 1
"spam", "eigen_approx", 1, 0, 0, "double", 1
"spam", "eigen_approx", 2, 0, 0, "double", 1
"spam", "eigen_approx", 3, 0, 0, "double", 1
"spam", "eigen_approx", 4, 0, 0, "character", 1
"spam", "eigen_approx", 5, 0, 0, "logical", 1
"spam", "eigen_approx", 6, 0, 0, "logical", 1
"spam", "eigen_approx", 7, 0, 0, "character", 1
"spam", "eigen.spam", -1, 0, 0, "list<^double[] | null>", 1
"spam", "eigen.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "eigen.spam", 1, 0, 0, "double", 1
"spam", "eigen.spam", 2, 0, 0, "any", 1
"spam", "eigen.spam", 3, 0, 0, "logical", 1
"spam", "eigen.spam", 4, 0, 0, "list<character>", 1
"spam", ".format.spam", -1, 0, 0, "list<character>", 1
"spam", ".format.spam", 0, 0, 0, "class<`spam`>", 1
"spam", ".format.spam", 0, 0, 1, "class<`spam.chol.NgPeyton`>", 1
"spam", ".format.spam", 1, 0, 0, "...", 1
"spam", ".format.spam", 2, 0, 0, "logical", 1
"spam", "forwardsolve", -1, 0, 0, "(class<`matrix`> | double[])", 1
"spam", "forwardsolve", 0, 0, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "forwardsolve", 1, 0, 0, "class<`matrix`>", 1
"spam", "forwardsolve", 1, 0, 1, "double[]", 1
"spam", "forwardsolve", 2, 0, 0, "...", 1
"spam", "forwardsolve", -1, 1, 0, "(class<`matrix`> | double[])", 1
"spam", "forwardsolve", 0, 1, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "forwardsolve", 1, 1, 0, "class<`matrix`>", 1
"spam", "forwardsolve", 1, 1, 1, "double[]", 1
"spam", "forwardsolve", 2, 1, 0, "...", 1
"spam", "germany.plot", -1, 0, 0, "null", 1
"spam", "germany.plot", 0, 0, 0, "double[]", 1
"spam", "germany.plot", 1, 0, 0, "integer[]", 1
"spam", "germany.plot", 1, 0, 1, "null", 1
"spam", "germany.plot", 2, 0, 0, "double[]", 1
"spam", "germany.plot", 3, 0, 0, "logical", 1
"spam", "germany.plot", 4, 0, 0, "null", 1
"spam", "germany.plot", 5, 0, 0, "double", 1
"spam", "germany.plot", 6, 0, 0, "double", 1
"spam", "germany.plot", 7, 0, 0, "logical", 1
"spam", "germany.plot", 8, 0, 0, "...", 1
"spam", "getEigenval", -1, 0, 0, "list<^double[]>", 1
"spam", "getEigenval", 0, 0, 0, "double[]", 1
"spam", "getEigenval", 1, 0, 0, "integer", 1
"spam", "getEigenval", 2, 0, 0, "integer", 1
"spam", "getEigenval", 3, 0, 0, "integer", 1
"spam", "getEigenval", 4, 0, 0, "logical", 1
"spam", "grid_trace2", -1, 0, 0, "class<`gDesc`, `gTree`, `grob`>", 1
"spam", "grid_trace2", 0, 0, 0, "double[]", 1
"spam", "grid_trace2", 1, 0, 0, "double[]", 1
"spam", "grid_trace2", 2, 0, 0, "null", 1
"spam", "grid_trace2", 3, 0, 0, "null", 1
"spam", "grid_trace2", 4, 0, 0, "null", 1
"spam", "grid_trace2", 5, 0, 0, "character", 1
"spam", "grid_trace2", 6, 0, 0, "character", 1
"spam", "grid_trace2", 7, 0, 0, "character", 1
"spam", "grid_trace2", 8, 0, 0, "double[]", 1
"spam", "grid_trace2", 9, 0, 0, "null", 1
"spam", "grid_trace2", 10, 0, 0, "logical", 1
"spam", "grid_trace2", 11, 0, 0, "class<`unit`>", 1
"spam", "grid_trace2", 12, 0, 0, "class<`unit`>", 1
"spam", "grid_trace2", 13, 0, 0, "class<`unit`>", 1
"spam", "grid_trace2", 14, 0, 0, "class<`unit`>", 1
"spam", "grid_trace2", 15, 0, 0, "logical", 1
"spam", "grid_zoom", -1, 0, 0, "class<`gDesc`, `gTree`, `grob`>", 1
"spam", "grid_zoom", 0, 0, 0, "class<`gDesc`, `grob`, `points`>", 1
"spam", "grid_zoom", 0, 0, 1, "class<`gDesc`, `gTree`, `grob`>", 1
"spam", "grid_zoom", 1, 0, 0, "class<`viewport`>", 1
"spam", "grid_zoom", 2, 0, 0, "character", 1
"spam", "grid_zoom", 3, 0, 0, "any", 1
"spam", "grid_zoom", 4, 0, 0, "any", 1
"spam", "grid_zoom", 5, 0, 0, "double[]", 1
"spam", "grid_zoom", 6, 0, 0, "double[]", 1
"spam", "grid_zoom", 7, 0, 0, "double[]", 1
"spam", "grid_zoom", 8, 0, 0, "logical", 1
"spam", "grid_zoom", 9, 0, 0, "double", 1
"spam", "grid_zoom", 10, 0, 0, "character", 1
"spam", "grid_zoom", 11, 0, 0, "logical", 1
"spam", "grid_zoom", 12, 0, 0, "character", 1
"spam", "grid_zoom", 13, 0, 0, "class<`gpar`>", 1
"spam", "grid_zoom", 14, 0, 0, "null", 1
"spam", "grid_zoom", 14, 0, 1, "class<`gpar`>", 1
"spam", "grid_zoom", 15, 0, 0, "class<`axis`, `gDesc`, `gTree`, `grob`, `xaxis`>", 1
"spam", "grid_zoom", 15, 0, 1, "null", 1
"spam", "grid_zoom", 16, 0, 0, "null", 1
"spam", "head", -1, 0, 0, "class<`matrix`>", 1
"spam", "head", 0, 0, 0, "class<`spam`>", 1
"spam", "head", 1, 0, 0, "...", 1
"spam", "image", -1, 0, 0, "null", 1
"spam", "image", 0, 0, 0, "class<`spam`>", 1
"spam", "image", 1, 0, 0, "...", 1
"spam", "image.spam", -1, 0, 0, "null", 1
"spam", "image.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "image.spam", 1, 0, 0, "double[]", 1
"spam", "image.spam", 2, 0, 0, "any", 1
"spam", "image.spam", 3, 0, 0, "any", 1
"spam", "image.spam", 4, 0, 0, "any", 1
"spam", "image.spam", 5, 0, 0, "any", 1
"spam", "image.spam", 6, 0, 0, "any", 1
"spam", "image.spam", 7, 0, 0, "logical", 1
"spam", "image.spam", 8, 0, 0, "character", 1
"spam", "image.spam", 9, 0, 0, "character", 1
"spam", "image.spam", 10, 0, 0, "any", 1
"spam", "image.spam", 11, 0, 0, "any", 1
"spam", "image.spam", 12, 0, 0, "any", 1
"spam", "image.spam", 13, 0, 0, "logical", 1
"spam", "image.spam", 14, 0, 0, "any", 1
"spam", "image.spam", 15, 0, 0, "...", 1
"spam", "inefficiencywarning", -1, 0, 0, "null", 1
"spam", "inefficiencywarning", 0, 0, 0, "any", 1
"spam", "inefficiencywarning", 1, 0, 0, "double", 1
"spam", "is.spam", -1, 0, 0, "logical", 1
"spam", "is.spam", 0, 0, 0, "class<`matrix`>", 1
"spam", "is.spam", 0, 0, 1, "class<`spam`>", 1
"spam", "is.spam", 0, 0, 2, "double[]", 1
"spam", "isSymmetric", -1, 0, 0, "logical", 1
"spam", "isSymmetric", 0, 0, 0, "class<`spam`>", 1
"spam", "isSymmetric", 1, 0, 0, "...", 1
"spam", "isSymmetric.spam", -1, 0, 0, "logical", 1
"spam", "isSymmetric.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "isSymmetric.spam", 1, 0, 0, "double", 1
"spam", "isSymmetric.spam", 2, 0, 0, "...", 1
"spam", "kronecker", -1, 0, 0, "class<`spam`>", 1
"spam", "kronecker", 0, 0, 0, "class<`spam`>", 1
"spam", "kronecker", 1, 0, 0, "class<`spam`>", 1
"spam", "kronecker", 2, 0, 0, "character", 1
"spam", "kronecker", 3, 0, 0, "logical", 1
"spam", "kronecker", 4, 0, 0, "...", 1
"spam", "kronecker", -1, 1, 0, "class<`spam`>", 1
"spam", "kronecker", 0, 1, 0, "class<`spam`>", 1
"spam", "kronecker", 1, 1, 0, "class<`matrix`>", 1
"spam", "kronecker", 2, 1, 0, "character", 1
"spam", "kronecker", 3, 1, 0, "logical", 1
"spam", "kronecker", 4, 1, 0, "...", 1
"spam", "kronecker.spam", -1, 0, 0, "class<`spam`>", 1
"spam", "kronecker.spam", 0, 0, 0, "class<`matrix`>", 1
"spam", "kronecker.spam", 1, 0, 0, "class<`matrix`>", 1
"spam", "kronecker.spam", 2, 0, 0, "character", 1
"spam", "kronecker.spam", 3, 0, 0, "logical", 1
"spam", "kronecker.spam", 4, 0, 0, "...", 1
"spam", ".local", -1, 0, 0, "(character[] | logical)", 1
"spam", ".local", 0, 0, 0, "class<`spam`>", 1
"spam", ".local", 1, 0, 0, "class<`spam`>", 1
"spam", ".local", 2, 0, 0, "any", 1
"spam", ".local", 3, 0, 0, "null", 1
"spam", ".local", 4, 0, 0, "logical", 1
"spam", ".local", 5, 0, 0, "...", 1
"spam", ".local", -1, 1, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", ".local", 0, 1, 0, "class<`spam`>", 1
"spam", ".local", 1, 1, 0, "character", 1
"spam", ".local", 1, 1, 1, "integer[]", 1
"spam", ".local", 2, 1, 0, "character", 1
"spam", ".local", 3, 1, 0, "list<any>", 1
"spam", ".local", 4, 1, 0, "double", 1
"spam", ".local", 5, 1, 0, "null", 1
"spam", ".local", 6, 1, 0, "...", 1
"spam", ".local", -1, 2, 0, "double[]", 1
"spam", ".local", 0, 2, 0, "class<`spam`>", 1
"spam", ".local", 1, 2, 0, "any", 1
"spam", ".local", 2, 2, 0, "any", 1
"spam", ".local", -1, 3, 0, "logical", 1
"spam", ".local", 0, 3, 0, "class<`spam`>", 1
"spam", ".local", 1, 3, 0, "double", 1
"spam", ".local", 2, 3, 0, "...", 1
"spam", "lower.tri", -1, 0, 0, "class<`spam`>", 1
"spam", "lower.tri", 0, 0, 0, "class<`spam`>", 1
"spam", "lower.tri", 1, 0, 0, "logical", 1
"spam", "matrix_add_spammatrix", -1, 0, 0, "class<`matrix`>", 1
"spam", "matrix_add_spammatrix", 0, 0, 0, "class<`spam`>", 1
"spam", "matrix_add_spammatrix", 1, 0, 0, "class<`matrix`>", 1
"spam", "matrix_sub_matrixspam", -1, 0, 0, "class<`matrix`>", 1
"spam", "matrix_sub_matrixspam", 0, 0, 0, "class<`matrix`>", 1
"spam", "matrix_sub_matrixspam", 1, 0, 0, "class<`spam`>", 1
"spam", "mle.nomean.spam", -1, 0, 0, "list<double[] | character>", 1
"spam", "mle.nomean.spam", 0, 0, 0, "class<`matrix`>", 1
"spam", "mle.nomean.spam", 1, 0, 0, "class<`spam`>", 1
"spam", "mle.nomean.spam", 2, 0, 0, "class<`function`>", 1
"spam", "mle.nomean.spam", 3, 0, 0, "double[]", 1
"spam", "mle.nomean.spam", 4, 0, 0, "double[]", 1
"spam", "mle.nomean.spam", 5, 0, 0, "double[]", 1
"spam", "mle.nomean.spam", 6, 0, 0, "null", 1
"spam", "mle.nomean.spam", 7, 0, 0, "null", 1
"spam", "mle.nomean.spam", 8, 0, 0, "logical", 1
"spam", "mle.nomean.spam", 9, 0, 0, "...", 1
"spam", "mle.spam", -1, 0, 0, "list<double[] | character>", 1
"spam", "mle.spam", 0, 0, 0, "double[]", 1
"spam", "mle.spam", 1, 0, 0, "class<`matrix`>", 1
"spam", "mle.spam", 2, 0, 0, "class<`spam`>", 1
"spam", "mle.spam", 3, 0, 0, "class<`function`>", 1
"spam", "mle.spam", 4, 0, 0, "double[]", 1
"spam", "mle.spam", 5, 0, 0, "double[]", 1
"spam", "mle.spam", 6, 0, 0, "double[]", 1
"spam", "mle.spam", 7, 0, 0, "double[]", 1
"spam", "mle.spam", 8, 0, 0, "null", 1
"spam", "mle.spam", 9, 0, 0, "null", 1
"spam", "mle.spam", 10, 0, 0, "logical", 1
"spam", "mle.spam", 11, 0, 0, "...", 1
"spam", "nearest.dist", -1, 0, 0, "class<`spam`>", 1
"spam", "nearest.dist", 0, 0, 0, "class<`data.frame`>", 1
"spam", "nearest.dist", 0, 0, 1, "class<`matrix`>", 1
"spam", "nearest.dist", 1, 0, 0, "null", 1
"spam", "nearest.dist", 2, 0, 0, "character", 1
"spam", "nearest.dist", 3, 0, 0, "double", 1
"spam", "nearest.dist", 4, 0, 0, "logical", 1
"spam", "nearest.dist", 4, 0, 1, "null", 1
"spam", "nearest.dist", 5, 0, 0, "double", 1
"spam", "nearest.dist", 6, 0, 0, "logical", 1
"spam", "nearest.dist", 7, 0, 0, "null", 1
"spam", "neg2loglikelihood.spam", -1, 0, 0, "double", 1
"spam", "neg2loglikelihood.spam", 0, 0, 0, "double[]", 1
"spam", "neg2loglikelihood.spam", 1, 0, 0, "class<`matrix`>", 1
"spam", "neg2loglikelihood.spam", 2, 0, 0, "class<`spam`>", 1
"spam", "neg2loglikelihood.spam", 3, 0, 0, "class<`function`>", 1
"spam", "neg2loglikelihood.spam", 4, 0, 0, "double[]", 1
"spam", "neg2loglikelihood.spam", 5, 0, 0, "double[]", 1
"spam", "neg2loglikelihood.spam", 6, 0, 0, "null", 1
"spam", "neg2loglikelihood.spam", 7, 0, 0, "...", 1
"spam", ".newSpam", -1, 0, 0, "class<`spam`>", 1
"spam", ".newSpam", 0, 0, 0, "^double[]", 1
"spam", ".newSpam", 1, 0, 0, "double[]", 1
"spam", ".newSpam", 2, 0, 0, "double[]", 1
"spam", ".newSpam", 2, 0, 1, "null", 1
"spam", ".newSpam", 3, 0, 0, "double[]", 1
"spam", ".newSpam", 4, 0, 0, "logical", 1
"spam", "norm", -1, 0, 0, "double", 1
"spam", "norm", 0, 0, 0, "class<`matrix`>", 1
"spam", "norm", 1, 0, 0, "character", 1
"spam", "norm", 2, 0, 0, "...", 1
"spam", "norm", -1, 1, 0, "double", 1
"spam", "norm", 0, 1, 0, "class<`matrix`>", 1
"spam", "norm", 1, 1, 0, "any", 1
"spam", "norm", 2, 1, 0, "...", 1
"spam", "norm", -1, 2, 0, "double", 1
"spam", "norm", 0, 2, 0, "double[]", 1
"spam", "norm", 1, 2, 0, "any", 1
"spam", "norm", 2, 2, 0, "...", 1
"spam", "norm", -1, 3, 0, "double", 1
"spam", "norm", 0, 3, 0, "class<`spam`>", 1
"spam", "norm", 1, 3, 0, "any", 1
"spam", "norm", 2, 3, 0, "...", 1
"spam", "norm.spam", -1, 0, 0, "double", 1
"spam", "norm.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "norm.spam", 1, 0, 0, "character", 1
"spam", "norm.spam", 2, 0, 0, "...", 1
"spam", "ordering", -1, 0, 0, "integer[]", 1
"spam", "ordering", 0, 0, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "ordering", 1, 0, 0, "logical", 1
"spam", "ordering", -1, 1, 0, "integer[]", 1
"spam", "ordering", 0, 1, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "ordering", 1, 1, 0, "logical", 1
"spam", "pad<-", -1, 0, 0, "class<`spam`>", 1
"spam", "pad<-", 0, 0, 0, "class<`spam`>", 1
"spam", "pad<-", 1, 0, 0, "double[]", 1
"spam", "pad<-", -1, 1, 0, "class<`spam`>", 1
"spam", "pad<-", 0, 1, 0, "class<`spam`>", 1
"spam", "pad<-", 1, 1, 0, "double[]", 1
"spam", ".par.check.cov", -1, 0, 0, "double[]", 1
"spam", ".par.check.cov", 0, 0, 0, "double[]", 1
"spam", ".par.check.cov", 1, 0, 0, "double", 1
"spam", "permutation", -1, 0, 0, "class<`spam`>", 1
"spam", "permutation", 0, 0, 0, "class<`spam`>", 1
"spam", "permutation", 1, 0, 0, "double[]", 1
"spam", "permutation", 2, 0, 0, "double[]", 1
"spam", "permutation", 3, 0, 0, "logical", 1
"spam", "permutation", 4, 0, 0, "logical", 1
"spam", "permutation", -1, 1, 0, "class<`spam`>", 1
"spam", "permutation", 0, 1, 0, "class<`spam`>", 1
"spam", "permutation", 1, 1, 0, "double[]", 1
"spam", "permutation", 2, 1, 0, "double[]", 1
"spam", "permutation", 3, 1, 0, "logical", 1
"spam", "permutation", 4, 1, 0, "logical", 1
"spam", "precmat.GMRFreglat", -1, 0, 0, "class<`spam`>", 1
"spam", "precmat.GMRFreglat", 0, 0, 0, "double", 1
"spam", "precmat.GMRFreglat", 1, 0, 0, "double", 1
"spam", "precmat.GMRFreglat", 2, 0, 0, "double[]", 1
"spam", "precmat.GMRFreglat", 3, 0, 0, "character", 1
"spam", "precmat.GMRFreglat", 4, 0, 0, "double", 1
"spam", "precmat.IGMRFirreglat", -1, 0, 0, "class<`spam`>", 1
"spam", "precmat.IGMRFirreglat", 0, 0, 0, "class<`matrix`>", 1
"spam", "precmat.IGMRFirreglat", 0, 0, 1, "class<`spam`>", 1
"spam", "precmat.IGMRFirreglat", 1, 0, 0, "double", 1
"spam", "precmat.IGMRFreglat", -1, 0, 0, "class<`spam`>", 1
"spam", "precmat.IGMRFreglat", 0, 0, 0, "double", 1
"spam", "precmat.IGMRFreglat", 1, 0, 0, "double", 1
"spam", "precmat.IGMRFreglat", 2, 0, 0, "double", 1
"spam", "precmat.IGMRFreglat", 3, 0, 0, "double", 1
"spam", "precmat.RW1", -1, 0, 0, "class<`spam`>", 1
"spam", "precmat.RW1", 0, 0, 0, "double", 1
"spam", "precmat.RW2", -1, 0, 0, "class<`spam`>", 1
"spam", "precmat.RW2", 0, 0, 0, "double", 1
"spam", "precmat.season", -1, 0, 0, "class<`spam`>", 1
"spam", "precmat.season", 0, 0, 0, "double", 1
"spam", "precmat.season", 1, 0, 0, "double", 1
"spam", "print", -1, 0, 0, "null", 1
"spam", "print", 0, 0, 0, "class<`spam`>", 1
"spam", "print", 1, 0, 0, "...", 1
"spam", "rbind", -1, 0, 0, "class<`spam`>", 1
"spam", "rbind", 0, 0, 0, "...", 1
"spam", "rbind", 1, 0, 0, "double", 1
"spam", "rep_len64", -1, 0, 0, "double[]", 1
"spam", "rep_len64", 0, 0, 0, "double[]", 1
"spam", "rep_len64", 1, 0, 0, "double", 1
"spam", "rep_len64", 2, 0, 0, "any", 1
"spam", "rmvnorm.canonical", -1, 0, 0, "class<`matrix`>", 1
"spam", "rmvnorm.canonical", 0, 0, 0, "double", 1
"spam", "rmvnorm.canonical", 1, 0, 0, "double[]", 1
"spam", "rmvnorm.canonical", 2, 0, 0, "class<`spam`>", 1
"spam", "rmvnorm.canonical", 3, 0, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "rmvnorm.canonical", 3, 0, 1, "null", 1
"spam", "rmvnorm.canonical", 4, 0, 0, "...", 1
"spam", "rmvnorm.spam", -1, 0, 0, "class<`matrix`>", 1
"spam", "rmvnorm.spam", 0, 0, 0, "double", 1
"spam", "rmvnorm.spam", 1, 0, 0, "class<`matrix`>", 1
"spam", "rmvnorm.spam", 2, 0, 0, "class<`spam`>", 1
"spam", "rmvnorm.spam", 3, 0, 0, "null", 1
"spam", "rmvnorm.spam", 4, 0, 0, "...", 1
"spam", "rowpointers<-", -1, 0, 0, "class<`spam`>", 1
"spam", "rowpointers<-", 0, 0, 0, "class<`spam`>", 1
"spam", "rowpointers<-", 1, 0, 0, "double[]", 1
"spam", "rowSums", -1, 0, 0, "double[]", 1
"spam", "rowSums", 0, 0, 0, "class<`spam`>", 1
"spam", "rowSums", 1, 0, 0, "logical", 1
"spam", "rowSums", 2, 0, 0, "double", 1
"spam", "rowSums", 3, 0, 0, "...", 1
"spam", "setMode", -1, 0, 0, "integer", 1
"spam", "setMode", 0, 0, 0, "character", 1
"spam", "setMode", 1, 0, 0, "logical", 1
"spam", "setMode", 2, 0, 0, "logical", 1
"spam", "solve", -1, 0, 0, "(class<`matrix`> | double[])", 1
"spam", "solve", 0, 0, 0, "class<`spam`>", 1
"spam", "solve", 1, 0, 0, "any", 1
"spam", "solve", 2, 0, 0, "...", 1
"spam", "solve.spam", -1, 0, 0, "double[]", 1
"spam", "solve.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "solve.spam", 0, 0, 1, "class<`spam.chol.NgPeyton`>", 1
"spam", "solve.spam", 1, 0, 0, "double[]", 1
"spam", "solve.spam", 1, 0, 1, "class<`matrix`>", 1
"spam", "solve.spam", 2, 0, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "solve.spam", 2, 0, 1, "null", 1
"spam", "solve.spam", 3, 0, 0, "...", 1
"spam", "spam", -1, 0, 0, "class<`spam`>", 1
"spam", "spam", 0, 0, 0, "list<double[]>", 1
"spam", "spam", 1, 0, 0, "double", 1
"spam", "spam", 2, 0, 0, "double", 1
"spam", "spam", 3, 0, 0, "double", 1
"spam", "spam", -1, 1, 0, "class<`spam`>", 1
"spam", "spam", 0, 1, 0, "double[]", 1
"spam", "spam", 0, 1, 1, "list<double[]>", 1
"spam", "spam", 1, 1, 0, "double", 1
"spam", "spam", 2, 1, 0, "double", 1
"spam", "spam", 3, 1, 0, "double", 1
"spam", "spam", -1, 2, 0, "class<`spam`>", 1
"spam", "spam", 0, 2, 0, "double[]", 1
"spam", "spam", 1, 2, 0, "double", 1
"spam", "spam", 2, 2, 0, "double", 1
"spam", "spam", 3, 2, 0, "double", 1
"spam", "spam", -1, 3, 0, "class<`spam`>", 1
"spam", "spam", 0, 3, 0, "integer[]", 1
"spam", "spam", 1, 3, 0, "double", 1
"spam", "spam", 2, 3, 0, "double", 1
"spam", "spam", 3, 3, 0, "double", 1
"spam", "spam", -1, 4, 0, "class<`spam`>", 1
"spam", "spam", 0, 4, 0, "double", 1
"spam", "spam", 1, 4, 0, "double", 1
"spam", "spam", 2, 4, 0, "double", 1
"spam", "spam", 3, 4, 0, "double", 1
"spam", "spam_add", -1, 0, 0, "class<`spam`>", 1
"spam", "spam_add", 0, 0, 0, "class<`spam`>", 1
"spam", "spam_add", 1, 0, 0, "class<`spam`>", 1
"spam", "spam_add", 2, 0, 0, "double", 1
"spam", "spam.list", -1, 0, 0, "class<`spam`>", 1
"spam", "spam.list", 0, 0, 0, "list<double[]>", 1
"spam", "spam.list", 1, 0, 0, "double", 1
"spam", "spam.list", 2, 0, 0, "double", 1
"spam", "spam.list", 3, 0, 0, "double", 1
"spam", "spam.numeric", -1, 0, 0, "class<`spam`>", 1
"spam", "spam.numeric", 0, 0, 0, "double[]", 1
"spam", "spam.numeric", 1, 0, 0, "integer", 1
"spam", "spam.numeric", 2, 0, 0, "double", 1
"spam", "spam.numeric", 3, 0, 0, "double", 1
"spam", "spam_random", -1, 0, 0, "class<`spam`>", 1
"spam", "spam_random", 0, 0, 0, "double", 1
"spam", "spam_random", 1, 0, 0, "double", 1
"spam", "spam_random", 2, 0, 0, "double", 1
"spam", "spam_random", 3, 0, 0, "class<`function`>", 1
"spam", "spam_random", 3, 0, 1, "null", 1
"spam", "spam_random", 4, 0, 0, "double", 1
"spam", "spam_random", 4, 0, 1, "null", 1
"spam", "spam_random", 5, 0, 0, "logical", 1
"spam", "spam_random", 6, 0, 0, "logical", 1
"spam", "spam_random", 7, 0, 0, "logical", 1
"spam", "spam_random", 8, 0, 0, "...", 1
"spam", "subset_rows.spam", -1, 0, 0, "class<`spam`>", 1
"spam", "subset_rows.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "subset_rows.spam", 1, 0, 0, "double", 1
"spam", "subset_rows.spam", 1, 0, 1, "integer[]", 1
"spam", "subset_rows.spam", 2, 0, 0, "...", 1
"spam", "subset_rows.spam", 3, 0, 0, "logical", 1
"spam", "subset.spam", -1, 0, 0, "class<`spam`>", 1
"spam", "subset.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "subset.spam", 1, 0, 0, "double[]", 1
"spam", "subset.spam", 2, 0, 0, "double[]", 1
"spam", "subset.spam", 3, 0, 0, "...", 1
"spam", "subset.spam", 4, 0, 0, "logical", 1
"spam", "summary", -1, 0, 0, "class<`summary.spam.chol.NgPeyton`>", 1
"spam", "summary", 0, 0, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "summary", 1, 0, 0, "...", 1
"spam", "summary", -1, 1, 0, "class<`summary.spam`>", 1
"spam", "summary", 0, 1, 0, "class<`spam`>", 1
"spam", "summary", 1, 1, 0, "...", 1
"spam", "t", -1, 0, 0, "class<`spam`>", 1
"spam", "t", 0, 0, 0, "class<`spam`>", 1
"spam", "tail", -1, 0, 0, "class<`matrix`>", 1
"spam", "tail", 0, 0, 0, "class<`spam`>", 1
"spam", "tail", 1, 0, 0, "...", 1
"spam", "toeplitz.spam", -1, 0, 0, "class<`spam`>", 1
"spam", "toeplitz.spam", 0, 0, 0, "double[]", 1
"spam", "toeplitz.spam", 1, 0, 0, "double[]", 1
"spam", "toeplitz.spam", 1, 0, 1, "null", 1
"spam", "toeplitz.spam", 2, 0, 0, "double", 1
"spam", "triplet", -1, 0, 0, "list<double[] | class<`matrix`> | double[]>", 1
"spam", "triplet", 0, 0, 0, "class<`spam`>", 1
"spam", "triplet", 1, 0, 0, "logical", 1
"spam", "t.spam", -1, 0, 0, "class<`spam`>", 1
"spam", "t.spam", 0, 0, 0, "class<`spam`>", 1
"spam", "update.spam.chol.NgPeyton", -1, 0, 0, "(class<`spam.chol.NgPeyton`> | null)", 1
"spam", "update.spam.chol.NgPeyton", 0, 0, 0, "class<`spam.chol.NgPeyton`>", 1
"spam", "update.spam.chol.NgPeyton", 1, 0, 0, "class<`spam`>", 1
"spam", "update.spam.chol.NgPeyton", 2, 0, 0, "...", 1
"spam", "upper.tri", -1, 0, 0, "class<`spam`>", 1
"spam", "upper.tri", 0, 0, 0, "class<`spam`>", 1
"spam", "upper.tri", 1, 0, 0, "logical", 1
"spam", "validate_spam", -1, 0, 0, "logical", 1
"spam", "validate_spam", 0, 0, 0, "class<`spam`>", 1
