package_name, function_name, parameter_position, outer_alternative, inner_alternative, type, count
"udunits2", "filter", -1, 0, 0, "logical[]", 1
"udunits2", "filter", 0, 0, 0, "character[]", 1
"udunits2", "fun", -1, 0, 0, "null", 1
"udunits2", "fun", 0, 0, 0, "any", 1
"udunits2", "fun", 1, 0, 0, "any", 1
"udunits2", "fun", -1, 1, 0, "null", 1
"udunits2", "fun", 0, 1, 0, "any", 1
"udunits2", "fun", 1, 1, 0, "any", 1
"udunits2", "FUN", -1, 0, 0, "any", 1
"udunits2", "FUN", 0, 0, 0, "character", 1
"udunits2", "ud.are.convertible", -1, 0, 0, "logical", 1
"udunits2", "ud.are.convertible", 0, 0, 0, "character", 1
"udunits2", "ud.are.convertible", 1, 0, 0, "any", 1
"udunits2", "ud.convert", -1, 0, 0, "any", 1
"udunits2", "ud.convert", 0, 0, 0, "double[]", 1
"udunits2", "ud.convert", 0, 0, 1, "null", 1
"udunits2", "ud.convert", 1, 0, 0, "character", 1
"udunits2", "ud.convert", 2, 0, 0, "character", 1
"udunits2", "ud.get.name", -1, 0, 0, "character", 1
"udunits2", "ud.get.name", 0, 0, 0, "character", 1
"udunits2", "ud.get.symbol", -1, 0, 0, "character", 1
"udunits2", "ud.get.symbol", 0, 0, 0, "character", 1
"udunits2", "ud.have.unit.system", -1, 0, 0, "logical", 1
"udunits2", "ud.is.parseable", -1, 0, 0, "logical", 1
"udunits2", "ud.is.parseable", 0, 0, 0, "character", 1
"udunits2", "ud.set.encoding", -1, 0, 0, "any", 1
"udunits2", "ud.set.encoding", 0, 0, 0, "character", 1
